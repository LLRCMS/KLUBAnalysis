[general]

lumi = 41529 # pb^-1 full 2017

outputFolder = /nfs/dust/cms/user/kramerto/analysis_MuTau_UL17_12Jul

data = SingleMuon_Run2017B, SingleMuon_Run2017C, SingleMuon_Run2017D, SingleMuon_Run2017E, SingleMuon_Run2017F

signals = VBF_Radion_m250

#backgrounds = TT_fullyHad, TT_fullyLep, TT_semiLep, DY_incl, DY_1j, DY_2j, DY_3j, DY_4j, DY_HT70to100, DY_HT100to200, DY_HT200to400, DY_HT400to600, DY_HT600to800, DY_HT800to1200, DY_HT1200to2500, DY_HT2500toInf, WJets_HT0To70, WJets_HT70To100, WJets_HT100To200, WJets_HT200To400, WJets_HT400To600, WJets_HT600To800, WJets_HT800To1200, WJets_HT1200To2500, WJets_HT2500ToInf, ST_tW_top, ST_tW_antitop, ST_tchannel_top, ST_tchannel_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, ZHToTauTau, VBFHToTauTau, GluGluHToTauTau, WplusHToTauTau, WminusHToTauTau, ZZ, WZ, WW, ZZZ, WZZ, WWW, WWZ, ttHTobb, ttHToNonbb, ttHToTauTau, TTWJetsToLNu, TTWJetsToQQ, TTZZ, TTWW, TTWZ, TTZToLLNuNu
backgrounds = TT_fullyHad, TT_fullyLep, TT_semiLep, DY_NLO_incl, WJets_HT0To70, WJets_HT70To100, WJets_HT100To200, WJets_HT200To400, WJets_HT400To600, WJets_HT600To800, WJets_HT800To1200, WJets_HT1200To2500, WJets_HT2500ToInf, ST_tW_top, ST_tW_antitop, ST_tchannel_top, ST_tchannel_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, ZHToTauTau, VBFHToTauTau, GluGluHToTauTau, WplusHToTauTau, WminusHToTauTau, ZZ, WZ, WW, ZZZ, WZZ, WWW, WWZ, ttHTobb, ttHToNonbb, ttHToTauTau, TTWJetsToLNu, TTWJetsToQQ, TTZZ, TTWW, TTWZ, TTZToLLNuNu

variables = tauH_SVFIT_mass, ditau_deltaR, dau2_pt
#variables = dau1_pt, dau2_pt, dau1_eta, dau2_eta, ditau_deltaR, bjet1_pt, bjet1_bID_deepFlavor, bjet2_pt, bjet2_bID_deepFlavor, tauH_mass, tauH_SVFIT_mass, tauH_pt, bH_mass, bH_pt, HH_mass_raw, HH_pt, BDToutSM_kl_1, DNNoutSM_kl_1
#variables = dau1_pt, dau2_pt, dau1_eta, dau2_eta, dau1_phi, dau2_phi, ditau_deltaR, bjet1_pt, bjet2_pt, bjet1_eta, bjet2_eta, bjet1_phi, bjet2_phi, bjet1_bID_deepFlavor, bjet2_bID_deepFlavor, tauH_mass, tauH_SVFIT_mass, tauH_pt, bH_mass, bH_pt, HH_mass, HH_mass_raw, HH_pt
#variables = BDToutSM_kl_1, DNNoutSM_kl_1

selections = baseline
#selections = baseline, s1b1jresolvedMcut, s2b0jresolvedMcut, s1b1jresolvedMcutInverted, s2b0jresolvedMcutInverted
#selections = baseline, s1b1jresolved, s2b0jresolved, sboostedLL #, VBFloose
#selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut, VBFlooseMcut, VBFtightMcut

regions    = SR, SStight, SSrlx, OSinviso, SSinviso

[configs]

sampleCfg = config/sampleCfg_UL17_uhh.cfg
cutCfg    = config/selectionCfg_MuTau_UL17_uhh.cfg
#pattern  = goodsystfiles  # use this only when running on systematics files

[merge]
#DY    = DY_incl, DY_1j, DY_2j, DY_3j, DY_4j, DY_HT70to100, DY_HT100to200, DY_HT200to400, DY_HT400to600, DY_HT600to800, DY_HT800to1200, DY_HT1200to2500, DY_HT2500toInf
TT    = TT_fullyHad, TT_fullyLep, TT_semiLep
WJets = WJets_HT0To70, WJets_HT70To100, WJets_HT100To200, WJets_HT200To400, WJets_HT400To600, WJets_HT600To800, WJets_HT800To1200, WJets_HT1200To2500, WJets_HT2500ToInf
other = ST_tW_top, ST_tW_antitop, ST_tchannel_top, ST_tchannel_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, ZHToTauTau, VBFHToTauTau, GluGluHToTauTau, WplusHToTauTau, WminusHToTauTau, ZZ, WZ, WW, ZZZ, WZZ, WWW, WWZ, ttHTobb, ttHToNonbb, ttHToTauTau, TTWJetsToLNu, TTWJetsToQQ, TTZZ, TTWW, TTWZ, TTZToLLNuNu

#For Jona limits
#DY             = DYJets_0j0b, DYJets_1j0b, DYJets_1j1b, DYJets_2j0b, DYJets_2j1b, DYJets_2j2b, DYJets_3j0b, DYJets_3j1b, DYJets_3j2b, DYJets_3j3b, DYJets_4j0b, DYJets_4j1b, DYJets_4j2b, DYJets_4j3b, DYJets_4j4b
#TT             = TTfullyHad, TTfullyLep, TTsemiLep
#WJets          = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
#DY_lowMass     = DYJets_M_10_50_Not_PU_Safe, DYJets_M_10_50_PU_Safe
#singleT        = TWtop, TWantitop, singleTop_top, singleTop_antitop
#EWK            = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
#VH             = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, WplusHTauTau, WminusHTauTau
#ttH            = ttHJetToBB, ttHJetTononBB, ttHToTauTau
#doubleV        = ZZTo4L, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, WZTo3LNu, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WWTo2L2Nu, WWToLNuQQ, WWTo4Q
#tripleV        = ZZZ, WZZ, WWW, WWZ
#doubleTsingleV = TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTZToQQ
#doubleTVV      = TTZZ, TTWW, TTWZ, TTWH, TTZH

#For shape sync
#DY      = DYJets_0j0b, DYJets_1j0b, DYJets_1j1b, DYJets_2j0b, DYJets_2j1b, DYJets_2j2b, DYJets_3j0b, DYJets_3j1b, DYJets_3j2b, DYJets_3j3b, DYJets_4j0b, DYJets_4j1b, DYJets_4j2b, DYJets_4j3b, DYJets_4j4b
#TT      = TTfullyHad, TTfullyLep, TTsemiLep
#W       = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
#EWK     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
#singleT = TWtop, TWantitop, singleTop_top, singleTop_antitop
#H       = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, ttHToTauTau
#TTV     = TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTZToQQ
#TTVV    = TTZZ, TTWW, TTWZ, TTWH, TTZH
#VV      = ZZTo4L, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, WZTo3LNu, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WWTo2L2Nu, WWToLNuQQ, WWTo4Q
#VVV     = WWW, WWZ, WZZ, ZZZ
#DY_LM   = DYJets_M_10_50_Not_PU_Safe, DYJets_M_10_50_PU_Safe

data_obs  = SingleMuon_Run2017B, SingleMuon_Run2017C, SingleMuon_Run2017D, SingleMuon_Run2017E, SingleMuon_Run2017F


############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
#
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


#for normal QCD
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD      = SSinviso
#regionC      = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
#QCDname      = QCD
#SR       = SR
#yieldSB      = OSinviso
#shapeSB      = OSinviso
#SBtoSRfactor = 1
#doFitIf      = False
#fitFunc      = [0] + [1]*x
#regionC      = SStight
#regionD      = SSinviso


[VBF_rew]
# !WARNING! The input samples MUST be in the order: node1, node2, node3, node4, node5, node19 !
# See the list 'inputSignals' to understand the link node<->couplings
doReweighting = False
inputSignals = VBFHH_CV_1_C2V_1_C3_1, VBFHH_CV_1_C2V_1_C3_0, VBFHH_CV_1_C2V_1_C3_2, VBFHH_CV_1_C2V_2_C3_1, VBFHH_CV_1_5_C2V_1_C3_1, VBFHH_CV_1_C2V_0_C3_2
target_kl  = 1
target_cv  = 0, 1
target_c2v = 1
target_xs = 1 #[pb]
