# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists
[selections]

#VBFtrigOff = ((isMC && (pass_triggerbit & (1 << 4) || pass_triggerbit & (1 << 5) || pass_triggerbit & (1 << 6))) || (!isMC && (pass_triggerbit & (1 << 3) || pass_triggerbit & (1 << 4) || pass_triggerbit & (1 << 5))))

# pT and eta cuts are already applied at trig match level, so they are not needed here
# dau1_pt > 25 && abs(dau1_eta) < 2.1 && dau2_pt > 25 && abs(dau2_eta) < 2.1
baseline         = pairType == 2 && nleps == 0 && nbjetscand > 1
baselineVBFtight = pairType == 2 && nleps == 0 && nbjetscand > 1 && isVBFtrigger == 1 && VBFjj_mass > 800 && VBFjet1_pt > 140 && VBFjet2_pt > 60 
baseline55       = baseline, tauH_SVFIT_mass > 50
baselineVBFloose = baseline, isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3

ditau35_tight = ((isMC && (pass_triggerbit & (1 << 4))) || (!isMC && (pass_triggerbit & (1 << 3))))
ditau40_tight = ((isMC && (pass_triggerbit & (1 << 5))) || (!isMC && (pass_triggerbit & (1 << 4))))
ditau40 = ((isMC && (pass_triggerbit & (1 << 6))) || (!isMC && (pass_triggerbit & (1 << 5))))

#baseline inclusive HTT (no additional jets requirement, only tautau pair)
baselineHTauTau         = pairType == 2 && nleps == 0 && isVBFtrigger == 0
baselineHTauTauVBFloose = baselineHTauTau55, isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3
baselineHTauTau55     = baselineHTauTau, tauH_mass > 55

baselineHTauTau_ditau35_tight = baselineHTauTau55, ditau35_tight
baselineHTauTau_ditau40_tight = baselineHTauTau55, ditau40_tight
baselineHTauTau_ditau40       = baselineHTauTau55, ditau40

baseline_ditau35_tight = baseline55, ditau35_tight
baseline_ditau40_tight = baseline55, ditau40_tight
baseline_ditau40       = baseline55, ditau40

#Davide : CR suggested by K
baseline40to70  = baseline, dau1_pt < 70 && dau2_pt < 70
baseline70      = baseline, dau1_pt > 70 && dau2_pt > 70
baseline_both0  = baseline, dau1_decayMode == 0 && dau2_decayMode == 0
baseline_both1  = baseline, dau1_decayMode == 1 && dau2_decayMode == 1
baseline_both10 = baseline, dau1_decayMode == 10 && dau2_decayMode == 10
baseline_both11 = baseline, dau1_decayMode == 11 && dau2_decayMode == 11

#splitting for different decay modes
baselineHTauTau_tau1_1Pr_tau2_1Pr    = baselineHTauTau, dau1_decayMode == 0 && dau2_decayMode == 0
baselineHTauTau_tau1_1Pr_tau2_1PrPi0 = baselineHTauTau, dau1_decayMode == 0 && dau2_decayMode == 1
baselineHTauTau_tau1_1Pr_tau2_3Pr    = baselineHTauTau, dau1_decayMode == 0 && dau2_decayMode == 10

baselineHTauTau_tau1_1PrPi0_tau2_1Pr    = baselineHTauTau, dau1_decayMode == 1 && dau2_decayMode == 0
baselineHTauTau_tau1_1PrPi0_tau2_1PrPi0 = baselineHTauTau, dau1_decayMode == 1 && dau2_decayMode == 1
baselineHTauTau_tau1_1PrPi0_tau2_3Pr    = baselineHTauTau, dau1_decayMode == 1 && dau2_decayMode == 10

baselineHTauTau_tau1_3Pr_tau2_1Pr    = baselineHTauTau, dau1_decayMode == 10 && dau2_decayMode == 0
baselineHTauTau_tau1_3Pr_tau2_1PrPi0 = baselineHTauTau, dau1_decayMode == 10 && dau2_decayMode == 1
baselineHTauTau_tau1_3Pr_tau2_3Pr    = baselineHTauTau, dau1_decayMode == 10 && dau2_decayMode == 10

baselineHTauTau_both1Pr    = baselineHTauTau55, dau1_decayMode == 0  && dau2_decayMode == 0
baselineHTauTau_both1PrPi0 = baselineHTauTau55, dau1_decayMode == 1  && dau2_decayMode == 1
baselineHTauTau_both3Pr    = baselineHTauTau55, dau1_decayMode == 10 && dau2_decayMode == 10

baselineHTauTau_1Pr    = baselineHTauTau55,  dau2_decayMode == 0
baselineHTauTau_1PrPi0 = baselineHTauTau55,  dau2_decayMode == 1
baselineHTauTau_3Pr    = baselineHTauTau55,  dau2_decayMode == 10 


# region DY enriched, splitted in different decay modes
DYenriched = ditau_deltaR < 2
baseline_DY = baseline55, DYenriched
baselineHTauTau_DY        = baselineHTauTau,  DYenriched
baselineHTauTau_1Pr_DY    = baselineHTauTau,  dau2_decayMode == 0 , DYenriched
baselineHTauTau_1PrPi0_DY = baselineHTauTau,  dau2_decayMode == 1 , DYenriched
baselineHTauTau_3Pr_DY    = baselineHTauTau,  dau2_decayMode == 10, DYenriched
baselineHTauTau_both1Pr_DY    = baselineHTauTau, DYenriched,dau1_decayMode == 0  && dau2_decayMode == 0
baselineHTauTau_both1PrPi0_DY = baselineHTauTau, DYenriched,dau1_decayMode == 1  && dau2_decayMode == 1
baselineHTauTau_both3Pr_DY    = baselineHTauTau, DYenriched,dau1_decayMode == 10 && dau2_decayMode == 10


# btag requirements - DeepFlavor WPs={0.0521, 0.3033, 0.7489}; // L,M,T -- Legacy 2017 DeepFlavor
btagL        = (bjet1_bID_deepFlavor > 0.0521 && bjet2_bID_deepFlavor < 0.0521) || (bjet1_bID_deepFlavor < 0.0521 && bjet2_bID_deepFlavor > 0.0521) #only 1 jet with loose btag working point
btagM        = (bjet1_bID_deepFlavor > 0.3033 && bjet2_bID_deepFlavor < 0.3033) || (bjet1_bID_deepFlavor < 0.3033 && bjet2_bID_deepFlavor > 0.3033) #only 1 jet with medium btag working point
btagMfirst   = (bjet1_bID_deepFlavor > 0.3033) || (bjet2_bID_deepFlavor > 0.3033)                                                                   #at least 1 jet with medium btag working point
btagLL       = bjet1_bID_deepFlavor > 0.0521 && bjet2_bID_deepFlavor > 0.0521 #both jets with loose btag working point
btagMM       = bjet1_bID_deepFlavor > 0.3033 && bjet2_bID_deepFlavor > 0.3033 #both jets with medium btag working point
nobtagMM     = bjet1_bID_deepFlavor < 0.3033 && bjet2_bID_deepFlavor < 0.3033 #both jets NOT btagged (medium working point)


massCut       = bH_mass_raw > 80 && bH_mass_raw < 160 && tauH_SVFIT_mass > 80 && tauH_SVFIT_mass < 160
massCutCent   = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && bH_mass_raw > 74.5 && bH_mass_raw < 147.5
boostMassCut  = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && fatjet_softdropMass > 90 && fatjet_softdropMass < 160
ellypsMassCut = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0 # mass cut centered on the Hbb Htt masses, applied in the final selections
circMassCut   = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) <  40.0
massCutHbb    = bH_mass_raw > 66 && bH_mass_raw < 156
massCutHtt    = tauH_SVFIT_mass > 81 && tauH_SVFIT_mass < 151

# updated mass cuts to be used with DNN 2020-07-31 (both ellyptical)
# https://github.com/GilesStrong/cms_runII_dnn_models#mass-cuts
boostMassCut2  = ((tauH_SVFIT_mass-128.)*(tauH_SVFIT_mass-128.))/(60.*60.) + ((bH_mass_raw-159.)*(bH_mass_raw-159.))/(94.*94.)   <  1.0
ellypsMassCut2 = ((tauH_SVFIT_mass-129.)*(tauH_SVFIT_mass-129.))/(53.*53.) + ((bH_mass_raw-169.)*(bH_mass_raw-169.))/(145.*145.) <  1.0


# ABCD regions used in the analysis - DeepTau
SR           = isOS != 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 5                          # signal region: opposite sign, isolated taus
SStight      = isOS == 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 5			      # B region
OSrlx        = isOS != 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2
SSrlx        = isOS == 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2			      # B' region
OSinviso     = isOS != 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2 && dau2_deepTauVsJet < 5 # C region
SSinviso     = isOS == 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2 && dau2_deepTauVsJet < 5 # D region

#QCD enriched
QCDenriched = baseline, nobtagMM, ditau_deltaR > 2, tauH_mass > 55 # mass cut to avoid residual disagreement

baselineMcutBB = baseline55, massCutHbb
baselineMcutTT = baseline55, massCutHtt

# for ABCD with vtight isolation requirement instead of medium
SRVTight =isOS != 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 5
SSrlxVTight = isOS == 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 3
SStightVTight      = isOS == 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 5
OSinvisoVTight     = isOS != 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 5
SSinvisoVTight     = isOS == 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 5

# for ABCD with tight isolation requirement instead of medium
SRTight           =isOS != 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 4
SSrlxTight        = isOS == 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 2
SStightTight      = isOS == 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 4
OSinvisoTight     = isOS != 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 4
SSinvisoTight     = isOS == 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 4


# baseline + Mass cut
baselineMcut          = baseline, ellypsMassCut
baseline55Mcut        = baseline55, ellypsMassCut
baselineHTauTau55Mcut = baselineHTauTau55, ellypsMassCut

# baseline by number of btagged jets
s1b1j = baseline , btagM
s2b0j = baseline , btagMM 
s0b2j = baseline , nobtagMM   

# split resolved and boosted categories
s1b1jresolved = s1b1j, isBoosted != 1 , !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3033 || bjet2_bID_deepFlavor > 0.3033))
s2b0jresolved = s2b0j, isBoosted != 1 , !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3033 || bjet2_bID_deepFlavor > 0.3033))
sboostedLL    = baseline , btagLL, isBoosted == 1 , !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3033 || bjet2_bID_deepFlavor > 0.3033))

# final categories - Run2 Legacy (including VBF category)
s1b1jresolvedMcut = baseline , btagM , isBoosted != 1 , ellypsMassCut2, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3033 || bjet2_bID_deepFlavor > 0.3033) )
s2b0jresolvedMcut = baseline , btagMM, isBoosted != 1 , ellypsMassCut2, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3033 || bjet2_bID_deepFlavor > 0.3033) )
sboostedLLMcut    = baseline , btagLL, isBoosted == 1 , boostMassCut2 , !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3033 || bjet2_bID_deepFlavor > 0.3033) )


# VBF category
VBFloose     = baselineVBFloose, btagMfirst
VBFlooseMcut = VBFloose, ellypsMassCut
VBFtight     = baselineVBFtight, btagMfirst
VBFtightMcut = VBFtight, ellypsMassCut 

VBF_0_0   = baseline, isVBF == 1, VBFjj_mass > 0 , VBFjj_deltaEta > 0


# VBF "multi-categories"
mpp_ggf_v1    = (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__dy)
mpp_vbf_v1    = (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__dy)
mpp_tth_v1    = (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__dy)
mpp_ttlep_v1  = (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__dy)
mpp_tthad_v1  = (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__dy)
mpp_dy_v1     = (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__tt_fh)

mpp_ggf_v2    = (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__dy)
mpp_vbf_v2    = (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__dy)
mpp_tth_v2    = (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__dy)
mpp_ttlep_v2  = (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__dy)
mpp_tthad_v2  = (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__dy)
mpp_dy_v2     = (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__tt_fh)

# replace v1 <-> v2 depending on which training is being used
GGFclass    = VBFloose, mpp_ggf_v2
VBFclass    = VBFloose, mpp_vbf_v2
ttHclass    = VBFloose, mpp_tth_v2
TTlepclass  = VBFloose, mpp_ttlep_v2
TThadclass  = VBFloose, mpp_tthad_v2
DYclass     = VBFloose, mpp_dy_v2


#########################################################################
#########################################################################

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]
baseline         = MC_weight, PUReweight, L1pref_weight, trigSF, IdAndIsoAndFakeSF_deep_pt, DYscale_MTT, prescaleWeight, PUjetID_SF
baselineHTauTau  = MC_weight, PUReweight, L1pref_weight, trigSF, IdAndIsoAndFakeSF_deep_pt, DYscale_MTT, prescaleWeight, PUjetID_SF
baselineVBFtight = MC_weight, PUReweight, L1pref_weight, trigSF, IdAndIsoAndFakeSF_deep_pt, DYscale_MTT, prescaleWeight, PUjetID_SF

# remove DY weights, they are already taken into account in baseline weights
btagLL   = bTagweightL
btagMM   = bTagweightM
nobtagMM = bTagweightM
btagL    = bTagweightL
btagM    = bTagweightM
btagMfirst    = bTagweightM

[selectionWeights_ext] # beta feature! use with care!
#weights decay mode dependent computed for 2017 Legacy computed on top of pt dep SF
#baseline        = (dau1_decayMode == 0 && isTau1real): 1.075, (dau2_decayMode == 0 && isTau2real): 1.075, (dau1_decayMode == 1 && isTau1real): 1.124, (dau2_decayMode == 1 && isTau2real): 1.124, (dau1_decayMode == 10 && isTau1real): 1.004, (dau2_decayMode == 10 && isTau2real): 1.004, (dau1_decayMode == 11 && isTau1real): 0.690, (dau2_decayMode == 11 && isTau2real): 0.690
#baselineHTauTau = (dau1_decayMode == 0 && isTau1real): 1.075, (dau2_decayMode == 0 && isTau2real): 1.075, (dau1_decayMode == 1 && isTau1real): 1.124, (dau2_decayMode == 1 && isTau2real): 1.124, (dau1_decayMode == 10 && isTau1real): 1.004, (dau2_decayMode == 10 && isTau2real): 1.004, (dau1_decayMode == 11 && isTau1real): 0.690, (dau2_decayMode == 11 && isTau2real): 0.690
#baseline        = (dau1_decayMode == 0 && isTau1real): 1.0  , (dau2_decayMode == 0 && isTau2real): 1.0  , (dau1_decayMode == 1 && isTau1real): 1.0  , (dau2_decayMode == 1 && isTau2real): 1.0  , (dau1_decayMode == 10 && isTau1real): 1.0  , (dau2_decayMode == 10 && isTau2real): 1.0  , (dau1_decayMode == 11 && isTau1real): 1.0  , (dau2_decayMode == 11 && isTau2real): 1.0
#baselineHTauTau = (dau1_decayMode == 0 && isTau1real): 1.0  , (dau2_decayMode == 0 && isTau2real): 1.0  , (dau1_decayMode == 1 && isTau1real): 1.0  , (dau2_decayMode == 1 && isTau2real): 1.0  , (dau1_decayMode == 10 && isTau1real): 1.0  , (dau2_decayMode == 10 && isTau2real): 1.0  , (dau1_decayMode == 11 && isTau1real): 1.0  , (dau2_decayMode == 11 && isTau2real): 1.0

#Home Made SF on top of pt binned - hhbtag - 3 settembre 2020
# SF_DM0  : +1.078   -0.036/+0.034 (68%)
# SF_DM1  : +1.112   -0.023/+0.023 (68%)
# SF_DM10 : +0.984   -0.067/+0.063 (68%)
# SF_DM11 : +0.759   -0.259/+0.178 (68%)
baseline = (dau1_decayMode == 0 && isTau1real): 1.078, (dau2_decayMode == 0 && isTau2real): 1.078, (dau1_decayMode == 1 && isTau1real): 1.112, (dau2_decayMode == 1 && isTau2real): 1.112, (dau1_decayMode == 10 && isTau1real): 0.984, (dau2_decayMode == 10 && isTau2real): 0.984, (dau1_decayMode == 11 && isTau1real): 0.759, (dau2_decayMode == 11 && isTau2real): 0.759

#########################################################################
#########################################################################

[sampleWeights]
#TTfullyHad = TTtopPtreweight
#TTfullyLep = TTtopPtreweight
#TTsemiLep  = TTtopPtreweight

#########################################################################
#########################################################################

# define alternative weights to be tested instead of the nominal one
[systematics]
TTtopPtreweight      = topUp:TTtopPtreweight_up , topDown:TTtopPtreweight_down
trigSF_DM0           = trigSFDM0Up:trigSF_DM0_up , trigSFDM0Down:trigSF_DM0_down
trigSF_DM1           = trigSFDM1Up:trigSF_DM1_up , trigSFDM1Down:trigSF_DM1_down
trigSF_DM10          = trigSFDM10Up:trigSF_DM10_up , trigSFDM10Down:trigSF_DM10_down
trigSF_DM11          = trigSFDM11Up:trigSF_DM11_up , trigSFDM11Down:trigSF_DM11_down
tauid_pt20to25       = tauid_pt20to25Up:idAndIsoAndFakeSF_tauid_pt20to25_up   , tauid_pt20to25Down:idAndIsoAndFakeSF_tauid_pt20to25_down
tauid_pt25to30       = tauid_pt25to30Up:idAndIsoAndFakeSF_tauid_pt25to30_up   , tauid_pt25to30Down:idAndIsoAndFakeSF_tauid_pt25to30_down
tauid_pt30to35       = tauid_pt30to35Up:idAndIsoAndFakeSF_tauid_pt30to35_up   , tauid_pt30to35Down:idAndIsoAndFakeSF_tauid_pt30to35_down
tauid_pt35to40       = tauid_pt35to40Up:idAndIsoAndFakeSF_tauid_pt35to40_up   , tauid_pt35to40Down:idAndIsoAndFakeSF_tauid_pt35to40_down
tauid_pt40toInf      = tauid_pt40toInfUp:idAndIsoAndFakeSF_tauid_pt40toInf_up , tauid_pt40toInfDown:idAndIsoAndFakeSF_tauid_pt40toInf_down
mutauFR_etaLt0p4     = mutauFR_etaLt0p4Up:idAndIsoAndFakeSF_mutauFR_etaLt0p4_up       , mutauFR_etaLt0p4Down:idAndIsoAndFakeSF_mutauFR_etaLt0p4_down
mutauFR_eta0p4to0p8  = mutauFR_eta0p4to0p8Up:idAndIsoAndFakeSF_mutauFR_eta0p4to0p8_up , mutauFR_eta0p4to0p8Down:idAndIsoAndFakeSF_mutauFR_eta0p4to0p8_dowm
mutauFR_eta0p8to1p2  = mutauFR_eta0p8to1p2Up:idAndIsoAndFakeSF_mutauFR_eta0p8to1p2_up , mutauFR_eta0p8to1p2Down:idAndIsoAndFakeSF_mutauFR_eta0p8to1p2_dowm
mutauFR_eta1p2to1p7  = mutauFR_eta1p2to1p7Up:idAndIsoAndFakeSF_mutauFR_eta1p2to1p7_up , mutauFR_eta1p2to1p7Down:idAndIsoAndFakeSF_mutauFR_eta1p2to1p7_dowm
mutauFR_etaGt1p7     = mutauFR_etaGt1p7Up:idAndIsoAndFakeSF_mutauFR_etaGt1p7_up       , mutauFR_etaGt1p7Down:idAndIsoAndFakeSF_mutauFR_etaGt1p7_down
etauFR_barrel        = etauFR_barrelUp:idAndIsoAndFakeSF_etauFR_barrel_up , etauFR_barrelDown:idAndIsoAndFakeSF_etauFR_barrel_down
etauFR_endcap        = etauFR_endcapUp:idAndIsoAndFakeSF_etauFR_endcap_up , etauFR_endcapDown:idAndIsoAndFakeSF_etauFR_endcap_down

#########################################################################
#########################################################################

# ROOT-like definition of the binning
[histos]

nbjetscand              = 20,-0.5,19.5
njets                	= 20,-0.5,19.5
npv                  	= 50, 0, 50
npu                     = 25, 0, 50

isTau2real              = 2, 0, 2
isTau1real              = 2, 0, 2
nRealTaus               = 3, 0, 3

dau1_pt              	= 40, 40, 160
dau1_eta             	= 25, -2.5, 2.5
dau1_phi             	= 25, -3.14159, 3.14159
dau1_MVAisoNew          = 6, 0, 6
dau1_dxy             	= 100, -0.01, 0.01
dau1_dz              	= 100, -0.1, 0.1
dau1_decayMode          = 11, 0, 11
dau2_pt              	= 40, 40, 160
dau2_eta             	= 100, -2.5, 2.5
dau2_phi             	= 25, -3.14159, 3.14159
dau2_MVAisoNew          = 6, 0, 6
dau2_dxy             	= 100, -0.01, 0.01
dau2_dz              	= 100, -0.1, 0.1
dau2_decayMode          = 11, 0, 11

met_et               	= 35,0,350
met_phi              	= 25, -0.2, 6.3
met_er_et            	= 30, 0, 600
met_er_phi           	= 25, -3.14159, 3.14159

bjet1_pt             	= 30, 20, 200
bjet1_eta            	= 25, -2.4, 2.4
bjet1_phi            	= 25, -3.14159, 3.14159
bjet1_bID_deepFlavor 	= 15, 0, 1
bjet2_pt             	= 30, 20, 200
bjet2_eta            	= 25, -2.4, 2.4
bjet2_phi            	= 25, -3.14159, 3.14159
bjet2_bID_deepFlavor 	= 15, 0, 1

bH_mass              	= 50, 0, 500
bH_mass_raw          	= 50, 0, 300
bH_pt                	= 20, 0, 400
dib_deltaR              = 25, 0, 5
dib_deltaPhi            = 15, 0., 3.14159
dib_deltaEta            = 20, 0, 10

tauH_mass            	= 25, 0, 300
tauH_pt              	= 20, 0, 300
tauH_SVFIT_mass      	= 25, 0, 500
tauH_SVFIT_pt        	= 20, 0, 300
ditau_deltaR            = 25, 0, 5
ditau_deltaPhi          = 15, 0., 3.14159
ditau_deltaEta          = 20, 0, 10

HHmass               	= 10, 0, 1000
HH_pt                	= 50, 0, 300
HHKin_mass           	= 50, 250, 1000
HH_deltaPhi          	= 15, 0., 3.14159
HHsvfit_pt           	= 50, 0, 500
HHsvfit_deltaPhi     	= 25, 0, 3.14159
HH_deltaR            	= 35, 0, 7

VBFjj_mass           	= 20, 0, 1500
VBFjj_deltaEta       	= 20, 0, 10
VBFjj_dEtaSign       	= 40, -20, 20
VBFjet1_pt           	= 20, 0, 500
VBFjet1_eta          	= 25, -2.4, 2.4
VBFjet1_phi          	= 25, -3.14159, 3.14159
VBFjet1_btag_deepFlavor = 20, 0, 1
VBFjet2_pt           	= 20, 0, 500
VBFjet2_eta          	= 25, -2.4, 2.4
VBFjet2_phi          	= 25, -3.14159, 3.14159
VBFjet2_btag_deepFlavor = 20, 0, 1

fatjet_softdropMass     = 50, 0, 300

mT                    	     = 20, 0, 200
mT1                   	     = 20, 0, 200.
mT2                   	     = 20, 0, 200.
bH_VBF1_deltaEta      	     = 10, 0, 10
tauHMet_deltaPhi      	     = 15, 0., 3.14159
bHMet_deltaPhi        	     = 15, 0., 3.14159
tauHMetdeltaPhi       	     = 25, 0, 3.15
bHMetdeltaPhi         	     = 25, 0, 3.15
dau1MET_deltaphi      	     = 25, 0, 3.14159
tauHsvfitMet_deltaPhi 	     = 25, 0, 3.14159
dib_deltaR_per_bHpt   	     = 60, 0, 600
ditau_deltaR_per_tauHsvfitpt = 60, 0, 600
LepTauKine          	     = 25,-0.94,0.94
genDecMode1         	     = 10, -2, 8
p_zeta              	     = 30, -50, 250
HH_zV               	     = 40, -10, 10
BDT_MET_bH_cosTheta 	     = 20,  -1,   1
BDT_HT20            	     = 20,   0, 400
BDT_topPairMasses   	     = 30, 0, 600

BDToutSM_kl_1              = 15,-1,1

DNNoutSM_kl_1     = 20, 0, 1
DNNoutSM_kl_1_tauup_DM0    = 20,0,1
DNNoutSM_kl_1_taudown_DM0  = 20,0,1
DNNoutSM_kl_1_tauup_DM1    = 20,0,1
DNNoutSM_kl_1_taudown_DM1  = 20,0,1
DNNoutSM_kl_1_tauup_DM10   = 20,0,1
DNNoutSM_kl_1_taudown_DM10 = 20,0,1
DNNoutSM_kl_1_tauup_DM11   = 20,0,1
DNNoutSM_kl_1_taudown_DM11 = 20,0,1
DNNoutSM_kl_1_eleup_DM0    = 20,0,1
DNNoutSM_kl_1_eledown_DM0  = 20,0,1
DNNoutSM_kl_1_eleup_DM1    = 20,0,1
DNNoutSM_kl_1_eledown_DM1  = 20,0,1
DNNoutSM_kl_1_muup         = 20,0,1
DNNoutSM_kl_1_mudown       = 20,0,1
DNNoutSM_kl_1_jetupTot     = 20,0,1
DNNoutSM_kl_1_jetdownTot   = 20,0,1

#########################################################################
#########################################################################

# user defined binning for a variable - has precedence on [histos]
[binning]
#HH_mass             = 200, 250, 300, 350, 450, 600, 1000
#HH_mass_raw         = 0, 100, 120, 140, 160, 180, 200, 225, 250, 275, 300, 325, 350, 375, 400, 500
#HHKin_mass          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
#HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
#HHsvfit_mass        = 0, 100, 120, 140, 160, 180, 200, 225, 250, 275, 300, 325, 350, 375, 400, 500
#bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#fatjet_softdropMass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#tauH_SVFIT_mass     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 350, 500, 600

DNNoutSM_kl_1              = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_tauup_DM0    = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_taudown_DM0  = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_tauup_DM1    = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_taudown_DM1  = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_tauup_DM10   = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_taudown_DM10 = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_tauup_DM11   = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_taudown_DM11 = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_eleup_DM0    = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_eledown_DM0  = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_eleup_DM1    = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_eledown_DM1  = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_muup         = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_mudown       = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_jetupTot     = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0
DNNoutSM_kl_1_jetdownTot   = 0.0, 0.0040000000000000036, 0.238, 0.43199999999999994, 0.586, 0.6970000000000001, 0.779, 0.839, 0.881, 0.913, 0.937, 0.955, 0.968, 0.98, 0.99, 1.0

s1b1jresolvedMcut_SR:DNNoutSM_kl_1       = 0.0, 0.118, 0.238, 0.353, 0.45599999999999996, 0.544, 0.625, 0.6910000000000001, 0.745, 0.7929999999999999, 0.827, 0.857, 0.882, 0.903, 0.92, 0.9339999999999999, 0.946, 0.957, 0.966, 0.974, 0.981, 0.987, 0.993, 1.0
s1b1jresolvedMcut_SStight:DNNoutSM_kl_1  = 0.0, 0.118, 0.238, 0.353, 0.45599999999999996, 0.544, 0.625, 0.6910000000000001, 0.745, 0.7929999999999999, 0.827, 0.857, 0.882, 0.903, 0.92, 0.9339999999999999, 0.946, 0.957, 0.966, 0.974, 0.981, 0.987, 0.993, 1.0
s1b1jresolvedMcut_OSinviso:DNNoutSM_kl_1 = 0.0, 0.118, 0.238, 0.353, 0.45599999999999996, 0.544, 0.625, 0.6910000000000001, 0.745, 0.7929999999999999, 0.827, 0.857, 0.882, 0.903, 0.92, 0.9339999999999999, 0.946, 0.957, 0.966, 0.974, 0.981, 0.987, 0.993, 1.0
s1b1jresolvedMcut_SSinviso:DNNoutSM_kl_1 = 0.0, 0.118, 0.238, 0.353, 0.45599999999999996, 0.544, 0.625, 0.6910000000000001, 0.745, 0.7929999999999999, 0.827, 0.857, 0.882, 0.903, 0.92, 0.9339999999999999, 0.946, 0.957, 0.966, 0.974, 0.981, 0.987, 0.993, 1.0

s2b0jresolvedMcut_SR:DNNoutSM_kl_1       = 0.0, 0.08499999999999996, 0.21999999999999997, 0.33599999999999997, 0.44099999999999995, 0.5329999999999999, 0.607, 0.669, 0.723, 0.771, 0.806, 0.839, 0.865, 0.886, 0.905, 0.921, 0.9339999999999999, 0.945, 0.955, 0.963, 0.97, 0.977, 0.983, 0.989, 0.994, 1.0
s2b0jresolvedMcut_SStight:DNNoutSM_kl_1  = 0.0, 0.08499999999999996, 0.21999999999999997, 0.33599999999999997, 0.44099999999999995, 0.5329999999999999, 0.607, 0.669, 0.723, 0.771, 0.806, 0.839, 0.865, 0.886, 0.905, 0.921, 0.9339999999999999, 0.945, 0.955, 0.963, 0.97, 0.977, 0.983, 0.989, 0.994, 1.0
s2b0jresolvedMcut_OSinviso:DNNoutSM_kl_1 = 0.0, 0.08499999999999996, 0.21999999999999997, 0.33599999999999997, 0.44099999999999995, 0.5329999999999999, 0.607, 0.669, 0.723, 0.771, 0.806, 0.839, 0.865, 0.886, 0.905, 0.921, 0.9339999999999999, 0.945, 0.955, 0.963, 0.97, 0.977, 0.983, 0.989, 0.994, 1.0
s2b0jresolvedMcut_SSinviso:DNNoutSM_kl_1 = 0.0, 0.08499999999999996, 0.21999999999999997, 0.33599999999999997, 0.44099999999999995, 0.5329999999999999, 0.607, 0.669, 0.723, 0.771, 0.806, 0.839, 0.865, 0.886, 0.905, 0.921, 0.9339999999999999, 0.945, 0.955, 0.963, 0.97, 0.977, 0.983, 0.989, 0.994, 1.0

sboostedLLMcut_SR:DNNoutSM_kl_1       = 0.0, 0.137, 0.261, 0.369, 0.47, 0.5549999999999999, 0.639, 0.732, 0.833, 0.927, 1.0
sboostedLLMcut_SStight:DNNoutSM_kl_1  = 0.0, 0.137, 0.261, 0.369, 0.47, 0.5549999999999999, 0.639, 0.732, 0.833, 0.927, 1.0
sboostedLLMcut_OSinviso:DNNoutSM_kl_1 = 0.0, 0.137, 0.261, 0.369, 0.47, 0.5549999999999999, 0.639, 0.732, 0.833, 0.927, 1.0
sboostedLLMcut_SSinviso:DNNoutSM_kl_1 = 0.0, 0.137, 0.261, 0.369, 0.47, 0.5549999999999999, 0.639, 0.732, 0.833, 0.927, 1.0

VBFloose_SR:DNNoutSM_kl_1       = 0.0, 0.08099999999999996, 0.42599999999999993, 0.645, 0.794, 0.882, 0.937, 0.968, 0.985, 1.0
VBFloose_SStight:DNNoutSM_kl_1  = 0.0, 0.08099999999999996, 0.42599999999999993, 0.645, 0.794, 0.882, 0.937, 0.968, 0.985, 1.0
VBFloose_OSinviso:DNNoutSM_kl_1 = 0.0, 0.08099999999999996, 0.42599999999999993, 0.645, 0.794, 0.882, 0.937, 0.968, 0.985, 1.0
VBFloose_SSinviso:DNNoutSM_kl_1 = 0.0, 0.08099999999999996, 0.42599999999999993, 0.645, 0.794, 0.882, 0.937, 0.968, 0.985, 1.0


mdnn__v1__kl1_c2v1_c31__dy      =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__hh_ggf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__hh_vbf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__tt_fh   =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v1__kl1_c2v1_c31__tt_lep  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__tth     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__dy      =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__hh_ggf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__hh_vbf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__tt_fh   =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM0    =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM0  =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM1    =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM1  =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM10   =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM10 =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM11   =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM11 =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eleup_DM0    =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eledown_DM0  =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eleup_DM1    =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eledown_DM1  =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_muup         =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_mudown       =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_jetupTot     =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_jetdownTot   =  0.159999996424, 0.403600007296, 0.523599982262, 0.64359998703, 0.734700024128, 0.799700021744, 0.849799990654, 1.0

mdnn__v2__kl1_c2v1_c31__tt_lep  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tt_lep_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__tth     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

#########################################################################
#########################################################################

[histos2D]
tauH_SVFIT_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
tauH_SVFIT_mass:bH_mass     = 100, 0, 500, 100, 0, 500
tauH_mass:bH_mass           = 100, 0, 500, 100, 0, 500
genDecMode1:genDecMode2     = 10, -2,   8, 10, -2, 8
VBFjj_deltaEta:VBFjj_mass   = 40,  0,  10, 80,  0, 4000

#########################################################################
#########################################################################

# user defined binning for a variable - will override the definition in [histos2D]
# NOTE: if both x and y binnings are defined, there is no need to insert a binning in [histos2D]
# note: to specify an user binning for a certain axis of a 2D plot, e.g. a binning for B in A:B, use '@' :
# A:B@B = 0, 15, 20, 30, 50, 1000
[binning2D]
# tauH_SVFIT_mass:bH_mass_raw@bH_mass_raw     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass:bH_mass_raw@tauH_SVfit_mass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
