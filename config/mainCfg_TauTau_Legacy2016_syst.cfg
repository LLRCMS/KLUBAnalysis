[general]

lumi = 36330 # pb^-1 full 2016
# the lumi in fb^-1 is used only by the plotting program
# approximate to only one decimal digit
lumi_fb = 36.3 # pb^-1 full 2016

outputFolder = analysis_28Dec2022_syst_EFT/TauTau_2016

data = DTauB #, DTauC, DTauD, DTauE, DTauF, DTauG, DTauH

signals = GGHH_NLO_cHHH0_xs, GGHH_NLO_cHHH1_xs, GGHH_NLO_cHHH2p45_xs, GGHH_NLO_cHHH5_xs, VBFHH_CV_1_C2V_1_C3_1_xs, VBFHH_CV_0p5_C2V_1_C3_1_xs, VBFHH_CV_1p5_C2V_1_C3_1_xs, VBFHH_CV_1_C2V_1_C3_0_xs, VBFHH_CV_1_C2V_1_C3_2_xs, VBFHH_CV_1_C2V_2_C3_1_xs, VBFHH_CV_1_C2V_0_C3_1_xs
#EFT signals
#signals = GGHH_NLO_cHHH0_xs, GGHH_NLO_cHHH1_xs, GGHH_NLO_cHHH2p45_xs, benchmark1, benchmark2, benchmark3, benchmark4, benchmark5, benchmark6, benchmark7, benchmark8, benchmark9, benchmark10, benchmark11, benchmark12, benchmark8a, benchmark1b, benchmark2b, benchmark3b, benchmark4b, benchmark5b, benchmark6b, benchmark7b, GGHH_NLO_c2_0p35, GGHH_NLO_c2_1p0, GGHH_NLO_c2_3p0

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY_0b_1Pt, DY_0b_2Pt, DY_0b_3Pt, DY_0b_4Pt, DY_0b_5Pt, DY_0b_6Pt, DY_1b_1Pt, DY_1b_2Pt, DY_1b_3Pt, DY_1b_4Pt, DY_1b_5Pt, DY_1b_6Pt, DY_2b_1Pt, DY_2b_2Pt, DY_2b_3Pt, DY_2b_4Pt, DY_2b_5Pt, DY_2b_6Pt, DY_LM, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ
#Additional EFT background
#VBFHH_CV_1_C2V_1_C3_1_xs

variables = DNNoutSM_kl_1

selections = s1b1jresolvedMcut_nominal, s2b0jresolvedMcut_nominal, sboostedLLMcut_nominal, VBFloose_nominal, s1b1jresolvedMcut_tesUp_DM0, s1b1jresolvedMcut_tesDown_DM0, s2b0jresolvedMcut_tesUp_DM0, s2b0jresolvedMcut_tesDown_DM0, sboostedLLMcut_tesUp_DM0, sboostedLLMcut_tesDown_DM0, VBFloose_tesUp_DM0, VBFloose_tesDown_DM0, s1b1jresolvedMcut_tesUp_DM1, s1b1jresolvedMcut_tesDown_DM1, s2b0jresolvedMcut_tesUp_DM1, s2b0jresolvedMcut_tesDown_DM1, sboostedLLMcut_tesUp_DM1, sboostedLLMcut_tesDown_DM1, VBFloose_tesUp_DM1, VBFloose_tesDown_DM1, s1b1jresolvedMcut_tesUp_DM10, s1b1jresolvedMcut_tesDown_DM10, s2b0jresolvedMcut_tesUp_DM10, s2b0jresolvedMcut_tesDown_DM10, sboostedLLMcut_tesUp_DM10, sboostedLLMcut_tesDown_DM10, VBFloose_tesUp_DM10, VBFloose_tesDown_DM10, s1b1jresolvedMcut_tesUp_DM11, s1b1jresolvedMcut_tesDown_DM11, s2b0jresolvedMcut_tesUp_DM11, s2b0jresolvedMcut_tesDown_DM11, sboostedLLMcut_tesUp_DM11, sboostedLLMcut_tesDown_DM11, VBFloose_tesUp_DM11, VBFloose_tesDown_DM11, s1b1jresolvedMcut_eesUp_DM0, s1b1jresolvedMcut_eesDown_DM0, s2b0jresolvedMcut_eesUp_DM0, s2b0jresolvedMcut_eesDown_DM0, sboostedLLMcut_eesUp_DM0, sboostedLLMcut_eesDown_DM0, VBFloose_eesUp_DM0, VBFloose_eesDown_DM0, s1b1jresolvedMcut_eesUp_DM1, s1b1jresolvedMcut_eesDown_DM1, s2b0jresolvedMcut_eesUp_DM1, s2b0jresolvedMcut_eesDown_DM1, sboostedLLMcut_eesUp_DM1, sboostedLLMcut_eesDown_DM1, VBFloose_eesUp_DM1, VBFloose_eesDown_DM1, s1b1jresolvedMcut_mesUp, s1b1jresolvedMcut_mesDown, s2b0jresolvedMcut_mesUp, s2b0jresolvedMcut_mesDown, sboostedLLMcut_mesUp, sboostedLLMcut_mesDown, VBFloose_mesUp, VBFloose_mesDown, s1b1jresolvedMcut_jesUp_Tot, s1b1jresolvedMcut_jesDown_Tot, s2b0jresolvedMcut_jesUp_Tot, s2b0jresolvedMcut_jesDown_Tot, sboostedLLMcut_jesUp_Tot, sboostedLLMcut_jesDown_Tot, VBFloose_jesUp_Tot, VBFloose_jesDown_Tot, GGFclass_nominal, VBFclass_nominal, ttHclass_nominal, TTclass_nominal, DYclass_nominal, GGFclass_tesUp_DM0, GGFclass_tesDown_DM0, VBFclass_tesUp_DM0, VBFclass_tesDown_DM0, ttHclass_tesUp_DM0, ttHclass_tesDown_DM0, TTclass_tesUp_DM0, TTclass_tesDown_DM0, DYclass_tesUp_DM0, DYclass_tesDown_DM0, GGFclass_tesUp_DM1, GGFclass_tesDown_DM1, VBFclass_tesUp_DM1, VBFclass_tesDown_DM1, ttHclass_tesUp_DM1, ttHclass_tesDown_DM1, TTclass_tesUp_DM1, TTclass_tesDown_DM1, DYclass_tesUp_DM1, DYclass_tesDown_DM1, GGFclass_tesUp_DM10, GGFclass_tesDown_DM10, VBFclass_tesUp_DM10, VBFclass_tesDown_DM10, ttHclass_tesUp_DM10, ttHclass_tesDown_DM10, TTclass_tesUp_DM10, TTclass_tesDown_DM10, DYclass_tesUp_DM10, DYclass_tesDown_DM10, GGFclass_tesUp_DM11, GGFclass_tesDown_DM11, VBFclass_tesUp_DM11, VBFclass_tesDown_DM11, ttHclass_tesUp_DM11, ttHclass_tesDown_DM11, TTclass_tesUp_DM11, TTclass_tesDown_DM11, DYclass_tesUp_DM11, DYclass_tesDown_DM11, GGFclass_eesUp_DM0, GGFclass_eesDown_DM0, VBFclass_eesUp_DM0, VBFclass_eesDown_DM0, ttHclass_eesUp_DM0, ttHclass_eesDown_DM0, TTclass_eesUp_DM0, TTclass_eesDown_DM0, DYclass_eesUp_DM0, DYclass_eesDown_DM0, GGFclass_eesUp_DM1, GGFclass_eesDown_DM1, VBFclass_eesUp_DM1, VBFclass_eesDown_DM1, ttHclass_eesUp_DM1, ttHclass_eesDown_DM1, TTclass_eesUp_DM1, TTclass_eesDown_DM1, DYclass_eesUp_DM1, DYclass_eesDown_DM1, GGFclass_mesUp, GGFclass_mesDown, VBFclass_mesUp, VBFclass_mesDown, ttHclass_mesUp, ttHclass_mesDown, TTclass_mesUp, TTclass_mesDown, DYclass_mesUp, DYclass_mesDown, GGFclass_jesUp_Tot, GGFclass_jesDown_Tot, VBFclass_jesUp_Tot, VBFclass_jesDown_Tot, ttHclass_jesUp_Tot, ttHclass_jesDown_Tot, TTclass_jesUp_Tot, TTclass_jesDown_Tot, DYclass_jesUp_Tot, DYclass_jesDown_Tot, s1b1jresolvedMcut_jesUp_1, s2b0jresolvedMcut_jesUp_1, sboostedLLMcut_jesUp_1, VBFloose_jesUp_1, s1b1jresolvedMcut_jesUp_2, s2b0jresolvedMcut_jesUp_2, sboostedLLMcut_jesUp_2, VBFloose_jesUp_2, s1b1jresolvedMcut_jesUp_3, s2b0jresolvedMcut_jesUp_3, sboostedLLMcut_jesUp_3, VBFloose_jesUp_3, s1b1jresolvedMcut_jesUp_4, s2b0jresolvedMcut_jesUp_4, sboostedLLMcut_jesUp_4, VBFloose_jesUp_4, s1b1jresolvedMcut_jesUp_5, s2b0jresolvedMcut_jesUp_5, sboostedLLMcut_jesUp_5, VBFloose_jesUp_5, s1b1jresolvedMcut_jesUp_6, s2b0jresolvedMcut_jesUp_6, sboostedLLMcut_jesUp_6, VBFloose_jesUp_6, s1b1jresolvedMcut_jesUp_7, s2b0jresolvedMcut_jesUp_7, sboostedLLMcut_jesUp_7, VBFloose_jesUp_7, s1b1jresolvedMcut_jesUp_8, s2b0jresolvedMcut_jesUp_8, sboostedLLMcut_jesUp_8, VBFloose_jesUp_8, s1b1jresolvedMcut_jesUp_9, s2b0jresolvedMcut_jesUp_9, sboostedLLMcut_jesUp_9, VBFloose_jesUp_9, s1b1jresolvedMcut_jesUp_10, s2b0jresolvedMcut_jesUp_10, sboostedLLMcut_jesUp_10, VBFloose_jesUp_10, s1b1jresolvedMcut_jesUp_11, s2b0jresolvedMcut_jesUp_11, sboostedLLMcut_jesUp_11, VBFloose_jesUp_11, GGFclass_jesUp_1, VBFclass_jesUp_1, ttHclass_jesUp_1, TTclass_jesUp_1, DYclass_jesUp_1, GGFclass_jesUp_2, VBFclass_jesUp_2, ttHclass_jesUp_2, TTclass_jesUp_2, DYclass_jesUp_2, GGFclass_jesUp_3, VBFclass_jesUp_3, ttHclass_jesUp_3, TTclass_jesUp_3, DYclass_jesUp_3, GGFclass_jesUp_4, VBFclass_jesUp_4, ttHclass_jesUp_4, TTclass_jesUp_4, DYclass_jesUp_4, GGFclass_jesUp_5, VBFclass_jesUp_5, ttHclass_jesUp_5, TTclass_jesUp_5, DYclass_jesUp_5, GGFclass_jesUp_6, VBFclass_jesUp_6, ttHclass_jesUp_6, TTclass_jesUp_6, DYclass_jesUp_6, GGFclass_jesUp_7, VBFclass_jesUp_7, ttHclass_jesUp_7, TTclass_jesUp_7, DYclass_jesUp_7, GGFclass_jesUp_8, VBFclass_jesUp_8, ttHclass_jesUp_8, TTclass_jesUp_8, DYclass_jesUp_8, GGFclass_jesUp_9, VBFclass_jesUp_9, ttHclass_jesUp_9, TTclass_jesUp_9, DYclass_jesUp_9, GGFclass_jesUp_10, VBFclass_jesUp_10, ttHclass_jesUp_10, TTclass_jesUp_10, DYclass_jesUp_10, GGFclass_jesUp_11, VBFclass_jesUp_11, ttHclass_jesUp_11, TTclass_jesUp_11, DYclass_jesUp_11, s1b1jresolvedMcut_jesDown_1, s2b0jresolvedMcut_jesDown_1, sboostedLLMcut_jesDown_1, VBFloose_jesDown_1, s1b1jresolvedMcut_jesDown_2, s2b0jresolvedMcut_jesDown_2, sboostedLLMcut_jesDown_2, VBFloose_jesDown_2, s1b1jresolvedMcut_jesDown_3, s2b0jresolvedMcut_jesDown_3, sboostedLLMcut_jesDown_3, VBFloose_jesDown_3, s1b1jresolvedMcut_jesDown_4, s2b0jresolvedMcut_jesDown_4, sboostedLLMcut_jesDown_4, VBFloose_jesDown_4, s1b1jresolvedMcut_jesDown_5, s2b0jresolvedMcut_jesDown_5, sboostedLLMcut_jesDown_5, VBFloose_jesDown_5, s1b1jresolvedMcut_jesDown_6, s2b0jresolvedMcut_jesDown_6, sboostedLLMcut_jesDown_6, VBFloose_jesDown_6, s1b1jresolvedMcut_jesDown_7, s2b0jresolvedMcut_jesDown_7, sboostedLLMcut_jesDown_7, VBFloose_jesDown_7, s1b1jresolvedMcut_jesDown_8, s2b0jresolvedMcut_jesDown_8, sboostedLLMcut_jesDown_8, VBFloose_jesDown_8, s1b1jresolvedMcut_jesDown_9, s2b0jresolvedMcut_jesDown_9, sboostedLLMcut_jesDown_9, VBFloose_jesDown_9, s1b1jresolvedMcut_jesDown_10, s2b0jresolvedMcut_jesDown_10, sboostedLLMcut_jesDown_10, VBFloose_jesDown_10, s1b1jresolvedMcut_jesDown_11, s2b0jresolvedMcut_jesDown_11, sboostedLLMcut_jesDown_11, VBFloose_jesDown_11, GGFclass_jesDown_1, VBFclass_jesDown_1, ttHclass_jesDown_1, TTclass_jesDown_1, DYclass_jesDown_1, GGFclass_jesDown_2, VBFclass_jesDown_2, ttHclass_jesDown_2, TTclass_jesDown_2, DYclass_jesDown_2, GGFclass_jesDown_3, VBFclass_jesDown_3, ttHclass_jesDown_3, TTclass_jesDown_3, DYclass_jesDown_3, GGFclass_jesDown_4, VBFclass_jesDown_4, ttHclass_jesDown_4, TTclass_jesDown_4, DYclass_jesDown_4, GGFclass_jesDown_5, VBFclass_jesDown_5, ttHclass_jesDown_5, TTclass_jesDown_5, DYclass_jesDown_5, GGFclass_jesDown_6, VBFclass_jesDown_6, ttHclass_jesDown_6, TTclass_jesDown_6, DYclass_jesDown_6, GGFclass_jesDown_7, VBFclass_jesDown_7, ttHclass_jesDown_7, TTclass_jesDown_7, DYclass_jesDown_7, GGFclass_jesDown_8, VBFclass_jesDown_8, ttHclass_jesDown_8, TTclass_jesDown_8, DYclass_jesDown_8, GGFclass_jesDown_9, VBFclass_jesDown_9, ttHclass_jesDown_9, TTclass_jesDown_9, DYclass_jesDown_9, GGFclass_jesDown_10, VBFclass_jesDown_10, ttHclass_jesDown_10, TTclass_jesDown_10, DYclass_jesDown_10, GGFclass_jesDown_11, VBFclass_jesDown_11, ttHclass_jesDown_11, TTclass_jesDown_11, DYclass_jesDown_11

regions    = SR


[configs]
sampleCfg = config/sampleCfg_Legacy2016.cfg
pattern   = goodsystfiles
cutCfg    = config/selectionCfg_TauTau_Legacy2016_syst.cfg


[merge]
#limits
TT        = TTfullyHad, TTfullyLep, TTsemiLep
W         = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK       = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT   = singleTop_top, singleTop_antitop
TW        = TWtop, TWantitop
ZH        = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau
WH        = WplusHTauTau, WminusHTauTau
VV        = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q
ttH       = ttHJetTononBB, ttHJetToBB
TTX       = TTZZ, TTWW, TTWZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
ggH       = ggHTauTau
qqH       = VBFHTauTau
VVV       = WWW, WWZ, WZZ, ZZZ
#qqHH      = VBFHH_CV_1_C2V_1_C3_1_xs  # additional EFT background

#data_obs  = DTauB, DTauC, DTauD, DTauE, DTauF, DTauG, DTauH


############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
#
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD = SSinviso
#regionC = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso
