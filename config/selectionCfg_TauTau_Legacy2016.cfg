# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists
[selections]

### some selections with tes up/down
### note: jets are selected at skim level to have pt > 20
### so I am raising the pt value to 25 just to test the change in the acceptance

jetsVBFloose_nominal = isVBF && VBFjj_mass > 500 && VBFjj_deltaEta > 3, btagMfirst
jetsVBFloose_jesUp = isVBF && VBFjj_mass_jetup > 500 && VBFjj_deltaEta > 3 && VBFjet2_pt_jetup > 30, btagMfirst
jetsVBFloose_jesDown = isVBF && VBFjj_mass_jetdown > 500 && VBFjj_deltaEta > 3 && VBFjet2_pt_jetdown > 30, btagMfirst

noVBFloose_nominal = !(isVBF && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && bjet1_bID_deepCSV > 0.4941)
noVBFloose_jesUp = !(isVBF && VBFjj_mass_jetup > 500 && VBFjj_deltaEta > 3 && VBFjet2_pt_jetup > 30 && bjet1_bID_deepCSV > 0.4941)
noVBFloose_jesDown = !(isVBF && VBFjj_mass_jetdown > 500 && VBFjj_deltaEta > 3 && VBFjet2_pt_jetdown > 30 && bjet1_bID_deepCSV > 0.4941)


baseline_nominal     = pairType == 2 && dau1_pt > 40 && abs (dau1_eta) < 2.1 && dau2_pt > 40 && abs (dau2_eta) < 2.1 && nleps == 0 && nbjetscand > 1 && isVBFtrigger == 0 && bjet1_pt_raw > 25 && bjet2_pt_raw > 25 

baseline_tesUp       = pairType == 2 && dau1_pt_tauup > 40   && abs (dau1_eta) < 2.1 && dau2_pt_tauup > 40   && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw > 25         && bjet2_pt_raw > 25 && isVBFtrigger == 0
baseline_tesDown     = pairType == 2 && dau1_pt_taudown > 40 && abs (dau1_eta) < 2.1 && dau2_pt_taudown > 40 && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw > 25         && bjet2_pt_raw > 25 && isVBFtrigger == 0
baseline_jesUp       = pairType == 2 && dau1_pt > 40         && abs (dau1_eta) < 2.1 && dau2_pt > 40         && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw_jetup > 25   && bjet2_pt_raw_jetup > 25 && isVBFtrigger == 0
baseline_jesDown     = pairType == 2 && dau1_pt > 40         && abs (dau1_eta) < 2.1 && dau2_pt > 40         && abs (dau2_eta) < 2.1 && nleps == 0       && bjet1_pt_raw_jetdown > 25 && bjet2_pt_raw_jetdown > 25 && isVBFtrigger == 0

ellypsMassCut_tesUp    = ((tauH_SVFIT_mass_up-116.)*(tauH_SVFIT_mass_up-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ellypsMassCut_tesDown  = ((tauH_SVFIT_mass_down-116.)*(tauH_SVFIT_mass_down-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ellypsMassCut_jesUp    = ((tauH_SVFIT_mass_METup-116.)*(tauH_SVFIT_mass_METup-116.))/(35.*35.) + ((bH_mass_raw_jetup-111.)*(bH_mass_raw_jetup-111.))/(45.*45.) <  1.0
ellypsMassCut_jesDown  = ((tauH_SVFIT_mass_METdown-116.)*(tauH_SVFIT_mass_METdown-116.))/(35.*35.) + ((bH_mass_raw_jetdown-111.)*(bH_mass_raw_jetdown-111.))/(45.*45.) <  1.0

s1b1jresolvedMcut_nominal = baseline_nominal , btagM, isBoosted != 1 , ellypsMassCut, noVBFloose_nominal
s2b0jresolvedMcut_nominal = baseline_nominal , btagMM, isBoosted != 1 , ellypsMassCut, noVBFloose_nominal
sboostedLLMcut_nominal    = baseline_nominal , btagLL, isBoosted == 1 , boostMassCut, noVBFloose_nominal
VBFloose_nominal = baseline_nominal, btagMfirst, jetsVBFloose_nominal, tauH_SVFIT_mass > 50


s1b1jresolvedMcut_tesUp   = baseline_tesUp , btagM, isBoosted != 1 , ellypsMassCut_tesUp, noVBFloose_nominal
s2b0jresolvedMcut_tesUp   = baseline_tesUp , btagMM, isBoosted != 1 , ellypsMassCut_tesUp, noVBFloose_nominal
sboostedLLMcut_tesUp      = baseline_tesUp , btagLL, isBoosted == 1 , boostMassCut, noVBFloose_nominal
VBFloose_tesUp = baseline_tesUp, btagMfirst, jetsVBFloose_nominal, tauH_SVFIT_mass_up > 50

s1b1jresolvedMcut_tesDown = baseline_tesDown , btagM, isBoosted != 1 , ellypsMassCut_tesDown, noVBFloose_nominal
s2b0jresolvedMcut_tesDown = baseline_tesDown , btagMM, isBoosted != 1 , ellypsMassCut_tesDown, noVBFloose_nominal
sboostedLLMcut_tesDown    = baseline_tesDown , btagLL, isBoosted == 1 , boostMassCut, noVBFloose_nominal
VBFloose_tesDown = baseline_tesDown, btagMfirst, jetsVBFloose_nominal, tauH_SVFIT_mass_down > 50

s1b1jresolvedMcut_jesUp   = baseline_jesUp , btagM, isBoosted != 1 , ellypsMassCut_jesUp, noVBFloose_jesUp
s2b0jresolvedMcut_jesUp   = baseline_jesUp , btagMM, isBoosted != 1 , ellypsMassCut_jesUp , noVBFloose_jesUp
sboostedLLMcut_jesUp      = baseline_jesUp , btagLL, isBoosted == 1 , boostMassCut, noVBFloose_jesUp
VBFloose_jesUp = baseline_jesUp, btagMfirst, jetsVBFloose_jesUp, tauH_SVFIT_mass_METup > 50

s1b1jresolvedMcut_jesDown = baseline_jesDown , btagM, isBoosted != 1 , ellypsMassCut_jesDown, noVBFloose_jesDown 
s2b0jresolvedMcut_jesDown = baseline_jesDown , btagMM, isBoosted != 1 , ellypsMassCut_jesDown, noVBFloose_jesDown 
sboostedLLMcut_jesDown    = baseline_jesDown , btagLL, isBoosted == 1 , boostMassCut, noVBFloose_jesDown
VBFloose_jesDown = baseline_jesDown, btagMfirst, jetsVBFloose_jesDown, tauH_SVFIT_mass_METdown > 50


baselineVBFtight_nominal     = pairType == 2 && dau1_pt > 25 && abs (dau1_eta) < 2.1 && dau2_pt > 25 && tauH_SVFIT_mass > 50 && abs (dau2_eta) < 2.1 && nleps == 0 && nbjetscand > 1 && bjet1_pt_raw > 25 && bjet2_pt_raw > 25 && isVBFtrigger == 1 && VBFjj_mass > 800 && VBFjet1_pt > 140 && VBFjet2_pt > 60

baselineVBFtight_tesUp       = pairType == 2 && dau1_pt_tauup > 25 && abs (dau1_eta) < 2.1 && dau2_pt_tauup > 25 && tauH_SVFIT_mass_up > 50 && abs (dau2_eta) < 2.1 && nleps == 0 && nbjetscand > 1 && bjet1_pt_raw > 25 && bjet2_pt_raw > 25 && isVBFtrigger == 1 && VBFjj_mass > 800 && VBFjet1_pt > 140 && VBFjet2_pt > 60
baselineVBFtight_tesDown       = pairType == 2 && dau1_pt_taudown > 25 && abs (dau1_eta) < 2.1 && dau2_pt_taudown > 25 && tauH_SVFIT_mass_down > 50 && abs (dau2_eta) < 2.1 && nleps == 0 && nbjetscand > 1 && bjet1_pt_raw > 25 && bjet2_pt_raw > 25 && isVBFtrigger == 1 && VBFjj_mass > 800 && VBFjet1_pt > 140 && VBFjet2_pt > 60
baselineVBFtight_jesUp       = pairType == 2 && dau1_pt > 25 && abs (dau1_eta) < 2.1 && dau2_pt > 25 && tauH_SVFIT_mass > 50 && abs (dau2_eta) < 2.1 && nleps == 0 && nbjetscand > 1 && bjet1_pt_raw_jetup > 25 && bjet2_pt_raw_jetup > 25 && isVBFtrigger == 1 && VBFjj_mass_jetup > 800 && VBFjet1_pt_jetup > 140 && VBFjet2_pt_jetup > 60
baselineVBFtight_jesDown       = pairType == 2 && dau1_pt > 25 && abs (dau1_eta) < 2.1 && dau2_pt > 25 && tauH_SVFIT_mass > 50 && abs (dau2_eta) < 2.1 && nleps == 0 && nbjetscand > 1 && bjet1_pt_raw_jetdown > 25 && bjet2_pt_raw_jetdown > 25 && isVBFtrigger == 1 && VBFjj_mass_jetdown > 800 && VBFjet1_pt_jetdown > 140 && VBFjet2_pt_jetdown > 60

VBFtight_nominal = baselineVBFtight_nominal, btagMfirst
VBFtight_tesUp = baselineVBFtight_tesUp, btagMfirst
VBFtight_tesDown = baselineVBFtight_tesDown, btagMfirst
VBFtight_jesUp = baselineVBFtight_jesUp, btagMfirst
VBFtight_jesDown = baselineVBFtight_jesDown, btagMfirst



###########################################################################################
#VBFtrigOff = ((isMC && (pass_triggerbit & (1 << 4) || pass_triggerbit & (1 << 5) || pass_triggerbit & (1 << 6))) || (!isMC && (pass_triggerbit & (1 << 3) || pass_triggerbit & (1 << 4) || pass_triggerbit & (1 << 5))))

# pT and eta cuts are already applied at trig match level, so they are not needed here
# dau1_pt > 40 && abs(dau1_eta) < 2.1 && dau2_pt > 40 && abs(dau2_eta) < 2.1
baseline               = pairType == 2 && nleps == 0 && nbjetscand > 1
baseline55             = baseline, tauH_SVFIT_mass > 50
baselineVBFloose       = baseline, isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3

ditau35_tight = ((isMC && (pass_triggerbit & (1 << 4))) || (!isMC && (pass_triggerbit & (1 << 3))))
ditau40_tight = ((isMC && (pass_triggerbit & (1 << 5))) || (!isMC && (pass_triggerbit & (1 << 4))))
ditau40 = ((isMC && (pass_triggerbit & (1 << 6))) || (!isMC && (pass_triggerbit & (1 << 5))))

#baseline inclusive HTT (no additional jets requirement, only tautau pair)
baselineHTauTau         = pairType == 2 && nleps == 0 && isVBFtrigger == 0
baselineHTauTauVBFloose = baselineHTauTau55, isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3
baselineHTauTau55       = baselineHTauTau, tauH_SVFIT_mass > 55

baselineHTauTau_ditau35_tight = baselineHTauTau55, ditau35_tight
baselineHTauTau_ditau40_tight = baselineHTauTau55, ditau40_tight
baselineHTauTau_ditau40       = baselineHTauTau55, ditau40

baseline_ditau35_tight = baseline55, ditau35_tight
baseline_ditau40_tight = baseline55, ditau40_tight
baseline_ditau40       = baseline55, ditau40

baseline55Mcut = baseline55, ellypsMassCut
baselineHTauTau55Mcut = baselineHTauTau55, ellypsMassCut


#splitting for different decay modes
baselineHTauTau_tau1_1Pr_tau2_1Pr    = baselineHTauTau, dau1_decayMode == 0 && dau2_decayMode == 0
baselineHTauTau_tau1_1Pr_tau2_1PrPi0 = baselineHTauTau, dau1_decayMode == 0 && dau2_decayMode == 1
baselineHTauTau_tau1_1Pr_tau2_3Pr    = baselineHTauTau, dau1_decayMode == 0 && dau2_decayMode == 10

baselineHTauTau_tau1_1PrPi0_tau2_1Pr    = baselineHTauTau, dau1_decayMode == 1 && dau2_decayMode == 0
baselineHTauTau_tau1_1PrPi0_tau2_1PrPi0 = baselineHTauTau, dau1_decayMode == 1 && dau2_decayMode == 1
baselineHTauTau_tau1_1PrPi0_tau2_3Pr    = baselineHTauTau, dau1_decayMode == 1 && dau2_decayMode == 10

baselineHTauTau_tau1_3Pr_tau2_1Pr    = baselineHTauTau, dau1_decayMode == 10 && dau2_decayMode == 0
baselineHTauTau_tau1_3Pr_tau2_1PrPi0 = baselineHTauTau, dau1_decayMode == 10 && dau2_decayMode == 1
baselineHTauTau_tau1_3Pr_tau2_3Pr    = baselineHTauTau, dau1_decayMode == 10 && dau2_decayMode == 10

baselineHTauTau_both1Pr    = baselineHTauTau55, dau1_decayMode == 0  && dau2_decayMode == 0
baselineHTauTau_both1PrPi0 = baselineHTauTau55, dau1_decayMode == 1  && dau2_decayMode == 1
baselineHTauTau_both3Pr    = baselineHTauTau55, dau1_decayMode == 10 && dau2_decayMode == 10

baselineHTauTau_1Pr    = baselineHTauTau55,  dau2_decayMode == 0
baselineHTauTau_1PrPi0 = baselineHTauTau55,  dau2_decayMode == 1
baselineHTauTau_3Pr    = baselineHTauTau55,  dau2_decayMode == 10 


# region DY enriched, splitted in different decay modes
DYenriched = ditau_deltaR < 2
baseline_DY = baseline55, DYenriched
baselineHTauTau_DY        = baselineHTauTau,  DYenriched
baselineHTauTau_1Pr_DY    = baselineHTauTau,  dau2_decayMode == 0 , DYenriched
baselineHTauTau_1PrPi0_DY = baselineHTauTau,  dau2_decayMode == 1 , DYenriched
baselineHTauTau_3Pr_DY    = baselineHTauTau,  dau2_decayMode == 10, DYenriched
baselineHTauTau_both1Pr_DY    = baselineHTauTau, DYenriched,dau1_decayMode == 0  && dau2_decayMode == 0
baselineHTauTau_both1PrPi0_DY = baselineHTauTau, DYenriched,dau1_decayMode == 1  && dau2_decayMode == 1
baselineHTauTau_both3Pr_DY    = baselineHTauTau, DYenriched,dau1_decayMode == 10 && dau2_decayMode == 10


# btag requirements - DeepCSV
#btagL        = bjet1_bID_deepCSV > 0.1522 && bjet2_bID_deepCSV < 0.1522 #only 1 jet with loose btag working point
#btagM        = bjet1_bID_deepCSV > 0.4941 && bjet2_bID_deepCSV < 0.4941 #only 1 jet with medium btag working point
#btagMfirst   = bjet1_bID_deepCSV > 0.4941                               #at least 1 jet with medium btag working point
#btagLL       = bjet1_bID_deepCSV > 0.1522 && bjet2_bID_deepCSV > 0.1522 #both jets with loose btag working point
#btagMM       = bjet1_bID_deepCSV > 0.4941 && bjet2_bID_deepCSV > 0.4941 #both jets with medium btag working point
#nobtagMM     = bjet1_bID_deepCSV < 0.4941 && bjet2_bID_deepCSV < 0.4941 #both jets NOT btagged (medium working point)

# btag requirements - DeepFlavor WPs={0.0614, 0.3093, 0.7221}; // L,M,T -- Legacy 2016 DeepFlavor
btagL        = (bjet1_bID_deepFlavor > 0.0614 && bjet2_bID_deepFlavor < 0.0614) || (bjet1_bID_deepFlavor < 0.0614 && bjet2_bID_deepFlavor > 0.0614) #only 1 jet with loose btag working point
btagM        = (bjet1_bID_deepFlavor > 0.3093 && bjet2_bID_deepFlavor < 0.3093) || (bjet1_bID_deepFlavor < 0.3093 && bjet2_bID_deepFlavor > 0.3093) #only 1 jet with medium btag working point
btagMfirst   = (bjet1_bID_deepFlavor > 0.3093) || (bjet2_bID_deepFlavor > 0.3093)                                                                   #at least 1 jet with medium btag working point
btagLL       = bjet1_bID_deepFlavor > 0.0614 && bjet2_bID_deepFlavor > 0.0614 #both jets with loose btag working point
btagMM       = bjet1_bID_deepFlavor > 0.3093 && bjet2_bID_deepFlavor > 0.3093 #both jets with medium btag working point
nobtagMM     = bjet1_bID_deepFlavor < 0.3093 && bjet2_bID_deepFlavor < 0.3093 #both jets NOT btagged (medium working point)


massCut      = bH_mass_raw > 80 && bH_mass_raw < 160 && tauH_SVFIT_mass > 80 && tauH_SVFIT_mass < 160
massCutCent  = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && bH_mass_raw > 74.5 && bH_mass_raw < 147.5
boostMassCut = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && fatjet_softdropMass > 90 && fatjet_softdropMass < 160
ellypsMassCut  = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0 # mass cut centered on the Hbb Htt masses, applied in the final selections
circMassCut  = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) <  40.0
massCutHbb = bH_mass_raw > 66 && bH_mass_raw < 156
massCutHtt = tauH_SVFIT_mass > 81 && tauH_SVFIT_mass < 151

# updated mass cuts to be used with DNN 2020-07-31 (both ellyptical)
# https://github.com/GilesStrong/cms_runII_dnn_models#mass-cuts
boostMassCut2  = ((tauH_SVFIT_mass-128.)*(tauH_SVFIT_mass-128.))/(60.*60.) + ((bH_mass_raw-159.)*(bH_mass_raw-159.))/(94.*94.)   <  1.0
ellypsMassCut2 = ((tauH_SVFIT_mass-129.)*(tauH_SVFIT_mass-129.))/(53.*53.) + ((bH_mass_raw-169.)*(bH_mass_raw-169.))/(145.*145.) <  1.0


# ABCD regions used in the analysis - MVA2017v2
#SR           = isOS != 0 && dau1_MVAisoNew >= 3 && dau2_MVAisoNew >= 3                         # signal region: opposite sign, isolated taus
#SStight      = isOS == 0 && dau1_MVAisoNew >= 3 && dau2_MVAisoNew >= 3			       # B region
#OSrlx        = isOS != 0 && dau1_MVAisoNew >= 3 && dau2_MVAisoNew >= 1
#SSrlx        = isOS == 0 && dau1_MVAisoNew >= 3 && dau2_MVAisoNew >= 1			       # B' region
#OSinviso     = isOS != 0 && dau1_MVAisoNew >= 3 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 3   # C region
#SSinviso     = isOS == 0 && dau1_MVAisoNew >= 3 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 3   # D region

# ABCD regions used in the analysis - DeepTau
SR           = isOS != 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 5                   # signal region: opposite sign, isolated taus
SStight      = isOS == 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 5			       # B region
OSrlx        = isOS != 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2
SSrlx        = isOS == 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2			       # B' region
OSinviso     = isOS != 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2 && dau2_deepTauVsJet < 5   # C region
SSinviso     = isOS == 0 && dau1_deepTauVsJet >= 5 && dau2_deepTauVsJet >= 2 && dau2_deepTauVsJet < 5   # D region

#QCD enriched
QCDenriched = baseline, nobtagMM, ditau_deltaR > 2, tauH_mass > 55 # mass cut to avoid residual disagreement

baselineMcutBB = baseline55, massCutHbb
baselineMcutTT = baseline55, massCutHtt

# for ABCD with vtight isolation requirement instead of medium
SRVTight =isOS != 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 5
SSrlxVTight = isOS == 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 3
SStightVTight      = isOS == 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 5
OSinvisoVTight     = isOS != 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 5
SSinvisoVTight     = isOS == 0 && dau1_MVAisoNew >= 5 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 5

# for ABCD with tight isolation requirement instead of medium
SRTight           =isOS != 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 4
SSrlxTight        = isOS == 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 2
SStightTight      = isOS == 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 4
OSinvisoTight     = isOS != 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 4
SSinvisoTight     = isOS == 0 && dau1_MVAisoNew >= 4 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 4


# baseline + Mass cut
baselineMcut = baseline, ellypsMassCut

# baseline by number of btagged jets
s1b1j        = baseline , btagM
s2b0j        = baseline , btagMM 
s0b2j        = baseline , nobtagMM   

# split resolved and boosted categories
s1b1jresolved = baseline , btagM , isBoosted != 1
s2b0jresolved = baseline , btagMM, isBoosted != 1
sboostedLL    = baseline , btagLL, isBoosted == 1

#final categories 2016 analysis
s1b1jresolvedMcut_incl = baseline , btagM, isBoosted != 1 , ellypsMassCut
s2b0jresolvedMcut_incl = baseline , btagMM, isBoosted != 1 , ellypsMassCut
sboostedLLMcut_incl = baseline , btagLL, isBoosted == 1 , boostMassCut

# final categories - Run2 Legacy (including VBF category)
s1b1jresolvedMcut = baseline , btagM , isBoosted != 1 , ellypsMassCut2, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3093 || bjet2_bID_deepFlavor > 0.3093) )
s2b0jresolvedMcut = baseline , btagMM, isBoosted != 1 , ellypsMassCut2, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3093 || bjet2_bID_deepFlavor > 0.3093) )
sboostedLLMcut    = baseline , btagLL, isBoosted == 1 , boostMassCut2 , !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && (bjet1_bID_deepFlavor > 0.3093 || bjet2_bID_deepFlavor > 0.3093) )


# VBF category
VBFloose     = baselineVBFloose, btagMfirst
VBFlooseMcut = VBFloose, ellypsMassCut
VBFtight     = baselineVBFtight, btagMfirst

VBF_0_0   = baseline, isVBF == 1, VBFjj_mass > 0 , VBFjj_deltaEta > 0

# VBF "multi-categories"
mpp_ggf_v1    = (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__hh_ggf > mdnn__v1__kl1_c2v1_c31__dy)
mpp_vbf_v1    = (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__hh_vbf > mdnn__v1__kl1_c2v1_c31__dy)
mpp_tth_v1    = (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__tth    > mdnn__v1__kl1_c2v1_c31__dy)
mpp_ttlep_v1  = (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__tt_fh)  && (mdnn__v1__kl1_c2v1_c31__tt_lep > mdnn__v1__kl1_c2v1_c31__dy)
mpp_tthad_v1  = (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__tt_fh  > mdnn__v1__kl1_c2v1_c31__dy)
mpp_dy_v1     = (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__hh_ggf) && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__hh_vbf) && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__tth)    && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__tt_lep) && (mdnn__v1__kl1_c2v1_c31__dy     > mdnn__v1__kl1_c2v1_c31__tt_fh)

mpp_ggf_v2    = (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__hh_ggf > mdnn__v2__kl1_c2v1_c31__dy)
mpp_vbf_v2    = (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__hh_vbf > mdnn__v2__kl1_c2v1_c31__dy)
mpp_tth_v2    = (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__tth    > mdnn__v2__kl1_c2v1_c31__dy)
mpp_ttlep_v2  = (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__tt_fh)  && (mdnn__v2__kl1_c2v1_c31__tt_lep > mdnn__v2__kl1_c2v1_c31__dy)
mpp_tthad_v2  = (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__tt_fh  > mdnn__v2__kl1_c2v1_c31__dy)
mpp_dy_v2     = (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__hh_ggf) && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__hh_vbf) && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__tth)    && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__tt_lep) && (mdnn__v2__kl1_c2v1_c31__dy     > mdnn__v2__kl1_c2v1_c31__tt_fh)

# replace v1 <-> v2 depending on which training is being used
GGFclass    = VBFloose, mpp_ggf_v2
VBFclass    = VBFloose, mpp_vbf_v2
ttHclass    = VBFloose, mpp_tth_v2
TTlepclass  = VBFloose, mpp_ttlep_v2
TThadclass  = VBFloose, mpp_tthad_v2
DYclass     = VBFloose, mpp_dy_v2


#########################################################################
#########################################################################

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]
baseline          = MC_weight, PUReweight, PUjetID_SF, L1pref_weight, prescaleWeight, trigSF, IdAndIsoAndFakeSF_deep_pt, DYscale_MTT
#baseline          = MC_weight, PUReweight, PUjetID_SF, L1pref_weight, prescaleWeight, trigSF, IdAndIsoAndFakeSF_deep, DYscale_MTT
#baselineHTauTau   = MC_weight, PUReweight, PUjetID_SF, L1pref_weight, prescaleWeight, trigSF, IdAndIsoAndFakeSF_deep
#baselineVBFtight  = MC_weight, PUReweight, PUjetID_SF, L1pref_weight, prescaleWeight, trigSF, IdAndIsoAndFakeSF_deep, VBFtrigNorm, VBFtrigSFjet, VBFtrigSFtau

# remove DY weights, they are already taken into account in baseline weights
btagLL   = bTagweightL
btagMM   = bTagweightM
nobtagMM = bTagweightM
btagL    = bTagweightL
btagM    = bTagweightM
btagMfirst    = bTagweightM

[selectionWeights_ext] # beta feature! use with care!
#weights decay mode dependent computed with QCD backgrond estimation, DY LO weights, old DY weights, on top of decay mode dependend trigger weights, m_vis > 55 #11 Mar 2019 #used for testing, already saved in the skims
#baseline = (dau1_decayMode == 0 && isTau1real): 0.97, (dau2_decayMode == 0 && isTau2real): 0.97, (dau1_decayMode == 1 && isTau1real): 1.04, (dau2_decayMode == 1 && isTau2real): 1.04, (dau1_decayMode == 10 && isTau1real): 0.90, (dau2_decayMode == 10 && isTau2real): 0.90
#baselineHTauTau = (dau1_decayMode == 0 && isTau1real): 0.97, (dau2_decayMode == 0 && isTau2real): 0.97, (dau1_decayMode == 1 && isTau1real): 1.04, (dau2_decayMode == 1 && isTau2real): 1.04, (dau1_decayMode == 10 && isTau1real): 0.90, (dau2_decayMode == 10 && isTau2real): 0.90

#weights decay mode dependent computed with QCD backgrond + fakeTaus estimation, DY LO weights, old DY weights, on top of decay mode dependend trigger weights, m_vis > 55 #11 Mar 2019 
#baseline = (dau1_decayMode == 0 && isTau1real): 1.05, (dau2_decayMode == 0 && isTau2real): 1.05, (dau1_decayMode == 1 && isTau1real): 1.04, (dau2_decayMode == 1 && isTau2real): 1.04, (dau1_decayMode == 10 && isTau1real): 0.88, (dau2_decayMode == 10 && isTau2real): 0.88
#baselineHTauTau = (dau1_decayMode == 0 && isTau1real): 1.05, (dau2_decayMode == 0 && isTau2real): 1.05, (dau1_decayMode == 1 && isTau1real): 1.04, (dau2_decayMode == 1 && isTau2real): 1.04, (dau1_decayMode == 10 && isTau1real): 0.88, (dau2_decayMode == 10 && isTau2real): 0.88 

#weights decay mode dependent computed with QCD backgrond estimation, DY NLO weights, Pisa`s DY weights, on top of decay mode dependend trigger weights, m_vis > 55 #30 Apr 2019 
#baseline = (dau1_decayMode == 0 && isTau1real): 1.12, (dau2_decayMode == 0 && isTau2real): 1.12, (dau1_decayMode == 1 && isTau1real): 1.06, (dau2_decayMode == 1 && isTau2real): 1.06, (dau1_decayMode == 10 && isTau1real): 0.87, (dau2_decayMode == 10 && isTau2real): 0.87
#baselineHTauTau = (dau1_decayMode == 0 && isTau1real): 1.12, (dau2_decayMode == 0 && isTau2real): 1.12, (dau1_decayMode == 1 && isTau1real): 1.06, (dau2_decayMode == 1 && isTau2real): 1.06, (dau1_decayMode == 10 && isTau1real): 0.87, (dau2_decayMode == 10 && isTau2real): 0.87

#weights decay mode dependent computed with QCD backgrond estimation, DY LO weights, Pisa`s DY weights, on top of decay mode dependend trigger weights, m_vis > 55 #30 Apr 2019 
#baseline = (dau1_decayMode == 0 && isTau1real && DYLOtoNLOreweight > -1): 1.02, (dau2_decayMode == 0 && isTau2real && DYLOtoNLOreweight > -1): 1.02, (dau1_decayMode == 1 && isTau1real&& DYLOtoNLOreweight > -1): 1.09, (dau2_decayMode == 1 && isTau2real && DYLOtoNLOreweight > -1): 1.09, (dau1_decayMode == 10 && isTau1real && DYLOtoNLOreweight > -1): 0.93, (dau2_decayMode == 10 && isTau2real && DYLOtoNLOreweight > -1): 0.93
#baselineHTauTau =(dau1_decayMode == 0 && isTau1real && DYLOtoNLOreweight > -1): 1.02, (dau2_decayMode == 0 && isTau2real && DYLOtoNLOreweight > -1): 1.02, (dau1_decayMode == 1 && isTau1real && DYLOtoNLOreweight > -1): 1.09, (dau2_decayMode == 1 && isTau2real && DYLOtoNLOreweight > -1): 1.09, (dau1_decayMode == 10 && isTau1real && DYLOtoNLOreweight > -1): 0.93, (dau2_decayMode == 10 && isTau2real && DYLOtoNLOreweight > -1): 0.93

#baseline = (dau1_decayMode == 0 && isTau1real ): 1.02, (dau2_decayMode == 0 && isTau2real ): 1.02, (dau1_decayMode == 1 && isTau1real): 1.09, (dau2_decayMode == 1 && isTau2real ): 1.09, (dau1_decayMode == 10 && isTau1real ): 0.93, (dau2_decayMode == 10 && isTau2real ): 0.93
#baselineHTauTau =(dau1_decayMode == 0 && isTau1real ): 1.02, (dau2_decayMode == 0 && isTau2real ): 1.02, (dau1_decayMode == 1 && isTau1real ): 1.09, (dau2_decayMode == 1 && isTau2real ): 1.09, (dau1_decayMode == 10 && isTau1real ): 0.93, (dau2_decayMode == 10 && isTau2real ): 0.93

#baselineHTauTauVBFtight =(dau1_decayMode == 0 && isTau1real ): 1.02, (dau2_decayMode == 0 && isTau2real ): 1.02, (dau1_decayMode == 1 && isTau1real ): 1.09, (dau2_decayMode == 1 && isTau2real ): 1.09, (dau1_decayMode == 10 && isTau1real ): 0.93, (dau2_decayMode == 10 && isTau2real ): 0.93
#baselineVBFtight =(dau1_decayMode == 0 && isTau1real ): 1.02, (dau2_decayMode == 0 && isTau2real ): 1.02, (dau1_decayMode == 1 && isTau1real ): 1.09, (dau2_decayMode == 1 && isTau2real ): 1.09, (dau1_decayMode == 10 && isTau1real ): 0.93, (dau2_decayMode == 10 && isTau2real ): 0.93

# Legacy2016 - Feb2020
#baseline = (dau1_decayMode == 0 && isTau1real ): 1.060, (dau2_decayMode == 0 && isTau2real ): 1.060, (dau1_decayMode == 1 && isTau1real): 0.928, (dau2_decayMode == 1 && isTau2real ): 0.928, (dau1_decayMode == 10 && isTau1real ): 0.931, (dau2_decayMode == 10 && isTau2real ): 0.931

# Legacy2016 - May2020
#baseline = (dau1_decayMode == 0 && isTau1real ): 0.975, (dau2_decayMode == 0 && isTau2real ): 0.975, (dau1_decayMode == 1 && isTau1real): 0.979, (dau2_decayMode == 1 && isTau2real ): 0.979, (dau1_decayMode == 10 && isTau1real ): 1.017, (dau2_decayMode == 10 && isTau2real ): 1.017, (dau1_decayMode == 11 && isTau1real ): 1.206, (dau2_decayMode == 11 && isTau2real ): 1.206


#########################################################################
#########################################################################

[sampleWeights]
#TTfullyHad = TTtopPtreweight#, IdAndIsoSF
#TTfullyLep = TTtopPtreweight#, IdAndIsoSF
#TTsemiLep  = TTtopPtreweight#, IdAndIsoSF
#DY = DYLOtoNLOreweight

#########################################################################
#########################################################################

# define alternative weights to be tested instead of the nominal one
[systematics]
TTtopPtreweight      = topUp:TTtopPtreweight_up , topDown:TTtopPtreweight_down
trigSF_DM0           = trigSFDM0Up:trigSF_DM0_up , trigSFDM0Down:trigSF_DM0_down
trigSF_DM1           = trigSFDM1Up:trigSF_DM1_up , trigSFDM1Down:trigSF_DM1_down
trigSF_DM10          = trigSFDM10Up:trigSF_DM10_up , trigSFDM10Down:trigSF_DM10_down
trigSF_DM11          = trigSFDM11Up:trigSF_DM11_up , trigSFDM11Down:trigSF_DM11_down
tauid_pt20to25       = tauid_pt20to25Up:idAndIsoAndFakeSF_tauid_pt20to25_up   , tauid_pt20to25Down:idAndIsoAndFakeSF_tauid_pt20to25_down
tauid_pt25to30       = tauid_pt25to30Up:idAndIsoAndFakeSF_tauid_pt25to30_up   , tauid_pt25to30Down:idAndIsoAndFakeSF_tauid_pt25to30_down
tauid_pt30to35       = tauid_pt30to35Up:idAndIsoAndFakeSF_tauid_pt30to35_up   , tauid_pt30to35Down:idAndIsoAndFakeSF_tauid_pt30to35_down
tauid_pt35to40       = tauid_pt35to40Up:idAndIsoAndFakeSF_tauid_pt35to40_up   , tauid_pt35to40Down:idAndIsoAndFakeSF_tauid_pt35to40_down
tauid_pt40toInf      = tauid_pt40toInfUp:idAndIsoAndFakeSF_tauid_pt40toInf_up , tauid_pt40toInfDown:idAndIsoAndFakeSF_tauid_pt40toInf_down
mutauFR_etaLt0p4     = mutauFR_etaLt0p4Up:idAndIsoAndFakeSF_mutauFR_etaLt0p4_up       , mutauFR_etaLt0p4Down:idAndIsoAndFakeSF_mutauFR_etaLt0p4_down
mutauFR_eta0p4to0p8  = mutauFR_eta0p4to0p8Up:idAndIsoAndFakeSF_mutauFR_eta0p4to0p8_up , mutauFR_eta0p4to0p8Down:idAndIsoAndFakeSF_mutauFR_eta0p4to0p8_dowm
mutauFR_eta0p8to1p2  = mutauFR_eta0p8to1p2Up:idAndIsoAndFakeSF_mutauFR_eta0p8to1p2_up , mutauFR_eta0p8to1p2Down:idAndIsoAndFakeSF_mutauFR_eta0p8to1p2_dowm
mutauFR_eta1p2to1p7  = mutauFR_eta1p2to1p7Up:idAndIsoAndFakeSF_mutauFR_eta1p2to1p7_up , mutauFR_eta1p2to1p7Down:idAndIsoAndFakeSF_mutauFR_eta1p2to1p7_dowm
mutauFR_etaGt1p7     = mutauFR_etaGt1p7Up:idAndIsoAndFakeSF_mutauFR_etaGt1p7_up       , mutauFR_etaGt1p7Down:idAndIsoAndFakeSF_mutauFR_etaGt1p7_down
etauFR_barrel        = etauFR_barrelUp:idAndIsoAndFakeSF_etauFR_barrel_up , etauFR_barrelDown:idAndIsoAndFakeSF_etauFR_barrel_down
etauFR_endcap        = etauFR_endcapUp:idAndIsoAndFakeSF_etauFR_endcap_up , etauFR_endcapDown:idAndIsoAndFakeSF_etauFR_endcap_down

#########################################################################
#########################################################################

# ROOT-like definition of the binning
[histos]
mT                = 20, 0, 200
HH_pt             = 50, 0, 500
HHKin_mass        = 50, 250, 1000
bjet1_bID         = 50, 0., 1.
bjet2_bID         = 50, 0., 1.
bjet1_bID_deepCSV = 20, 0., 1.
bjet2_bID_deepCSV = 20, 0., 1.
HH_deltaPhi       = 15, 0., 3.14159
tauHMet_deltaPhi  = 15, 0., 3.14159
bHMet_deltaPhi    = 15, 0., 3.14159
ditau_deltaPhi    = 15, 0., 3.14159
dib_deltaPhi      = 15, 0., 3.14159
# dau1_pt           = 200, 23, 403
dau1_pt           = 35, 40, 150
dau1_eta          = 25, -2.5, 2.5
pt_1           = 40, 0, 200
eta_1          = 25, -2.5, 2.5
dau1_phi          = 25, -3.14159, 3.14159
dau1_iso          = 25, 0, 1
dau1_MVAisoNew    = 6, 0,6
dau2_MVAisoNew    = 6, 0,6
# dau2_pt           = 20, 0, 400
dau2_pt           = 35, 40, 150
dau2_eta          = 25, -2.5, 2.5
pt_2          = 40, 0, 200
eta_2          = 25, -2.5, 2.5
dau2_phi          = 25, -3.14159, 3.14159
dau2_iso          = 25, 0, 1
bjet1_pt          = 30, 0, 300
bjet2_pt          = 30, 0, 300
bjet1_eta         = 25, -2.4, 2.4
bjet2_eta         = 25, -2.4, 2.4
bjet1_phi         = 25, -3.14159, 3.14159
bjet2_phi         = 25, -3.14159, 3.14159
met_et            = 30, 0, 600
met_phi           = 25, -3.14159, 3.14159
met_er_et         = 30, 0, 600
met_er_phi        = 25, -3.14159, 3.14159
# bH_mass           = 25, 10, 510
#bH_mass           = 50, 0, 300
bH_mass           = 25, 0, 500
tauH_mass         = 50, 0, 200
bH_mass_raw       = 50, 0, 300
#tauH_SVFIT_mass   = 25, 20, 500
tauH_SVFIT_mass   = 50, 0, 200
HHmass            = 25, 0, 1000
njets            = 20,-0.5,19.5
njets20           = 10,-0.5,9.5
njets50           = 10,-0.5,9.5

nbjetscand            = 20,-0.5,19.5
nbjets20           = 20,-0.5,19.5
npv               = 25, 0, 50
npu               = 25, 0, 50

rho               = 25, 0, 50
tauHMetdeltaPhi   = 25, 0, 3.15
bHMetdeltaPhi     = 25, 0, 3.15
ditau_deltaR       = 25, 0, 5
dib_deltaR         = 25, 0, 5
dau1MET_deltaphi       = 25, 0, 3.14159
tauHsvfitMet_deltaPhi = 25, 0, 3.14159
mT1                   = 20, 0, 200.
mT2                   = 20, 0, 200.
HHsvfit_deltaPhi      = 25, 0, 3.14159
dib_deltaR_per_bHpt          = 60, 0, 600
ditau_deltaR_per_tauHsvfitpt = 60, 0, 600
BDTResonant           = 25,-1,1
# BDTResonantLM         = 25,-1,1
# BDTResonantHM         = 25,-1,1
BDTResonantLM         = 2500,-1,1
BDTResonantHM         = 2500,-1,1
BDTNonResonant        = 25,-1,1

LepTauKine            = 25,-0.94,0.94
genDecMode1           = 10, -2, 8
dau1_dxy           = 100, -0.01, 0.01
dau1_dz            = 100, -0.1, 0.1
fatjet_softdropMass = 50, 0, 300

HH_deltaR            = 35, 0, 7
tauH_pt              = 20, 0, 300
VBFjj_dEtaSign       = 40, -20, 20
dib_dEtaSign         = 40, -20, 20
VBFjj_deltaEta       = 15, 0, 10
ditau_deltaEta       = 20, 0, 10
VBFjj_mass           = 10, 800, 1000
VBFjet2_pt           = 20, 30, 500
bH_VBF1_deltaEta     = 10, 0, 10
VBFjet1_btag_deepCSV = 20, -1, 1
VBFjet1_pt           = 20, 30, 500
VBFjet2_PUjetID      = 20, -1, 1



dau1_z               = 20,-2,2
dau2_z               = 20,-2,2
bjet1_z              = 20,-2,2
bjet2_z              = 20,-2,2
tauH_z               = 20,-2,2
HH_z                 = 20,-2,2
HH_zV                = 20,-10,4
HH_A                 = 20,0,10
jet5_z               = 20, -2, 2
jet3_pt              = 20, 0, 300
jet4_pt              = 20, 0, 300
jet3_eta             = 25, -5, 5
jet4_eta             = 25, -5, 5

VBFjet1_eta             = 15, -5, 5
VBFjet2_eta             = 15, -5, 5

BDT_MET_bH_cosTheta = 20,  -1,   1
BDT_HT20            = 20,   0, 400
bH_pt               = 20,   0, 400
p_zeta              = 30, -50, 250

BDToutVBF           = 20, -1, 1

DNN_VBFvsGGF_TauTauTight = 10, 0,1
DNN_VBFvsGGF_TauTauLoose = 10, 0,1

isTau2real = 2, 0, 2
isTau1real = 2, 0, 2
nRealTaus = 3, 0, 3

dau1_decayMode = 11, 0, 11
dau2_decayMode = 11, 0, 11

trigSF = 40, 0.5, 1.5

DNNoutSM_kl_1     = 20, 0, 1
DNNoutSM_kl_1_tauup_DM0    = 20,0,1
DNNoutSM_kl_1_taudown_DM0  = 20,0,1
DNNoutSM_kl_1_tauup_DM1    = 20,0,1
DNNoutSM_kl_1_taudown_DM1  = 20,0,1
DNNoutSM_kl_1_tauup_DM10   = 20,0,1
DNNoutSM_kl_1_taudown_DM10 = 20,0,1
DNNoutSM_kl_1_tauup_DM11   = 20,0,1
DNNoutSM_kl_1_taudown_DM11 = 20,0,1
DNNoutSM_kl_1_eleup_DM0    = 20,0,1
DNNoutSM_kl_1_eledown_DM0  = 20,0,1
DNNoutSM_kl_1_eleup_DM1    = 20,0,1
DNNoutSM_kl_1_eledown_DM1  = 20,0,1
DNNoutSM_kl_1_muup         = 20,0,1
DNNoutSM_kl_1_mudown       = 20,0,1
DNNoutSM_kl_1_jetupTot     = 20,0,1
DNNoutSM_kl_1_jetdownTot   = 20,0,1

#########################################################################
#########################################################################

# user defined binning for a variable - has precedence on [histos]
[binning]
# HH_mass             = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw         = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw_tauup   = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw_taudown = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw         = 200, 225, 250, 275, 300, 350, 450, 550, 700, 1000 #200, 225, 250, 275, 300, 350, 400, 450, 500, 600, 1000
# HH_mass_raw_tauup   = 200, 225, 250, 275, 300, 350, 450, 550, 700, 1000
# HH_mass_raw_taudown = 200, 225, 250, 275, 300, 350, 450, 550, 700, 1000
# HHKin_mass          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600
# HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600

HH_mass_raw          = 0, 100, 200, 225, 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000

HHKin_mass_raw          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_tauup    = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_taudown  = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_jetup    = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
HHKin_mass_raw_jetdown  = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000

#tauH_pt = 0,20, 40, 60, 80, 100,125, 150, 175, 200, 250, 300
tauH_SVFIT_pt = 0,20, 40, 60, 80, 100,125, 150, 175, 200, 250, 300
#tauH_mass =10,30, 50, 75, 90,105,120,135, 150, 170, 200, 250, 300, 350, 400, 450, 500
bH_pt = 0, 20, 40, 60, 80, 100, 125, 150, 175, 200, 250, 300
#dau1_pt = 0, 20, 40, 60, 80, 100, 125,  150, 175, 200, 250, 300
#dau2_pt = 0, 20, 40, 60, 80, 100, 125,  150, 175, 200, 250, 300


bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
met_et             = 0, 20, 40, 60, 80, 120, 150, 200, 250, 400,600
met_er_et             = 0, 20, 40, 60, 80, 120, 150, 200, 250,400, 600
# bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
fatjet_softdropMass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 350, 500, 600
MT2          = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_tauup    = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_taudown  = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_jetup    = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
MT2_jetdown  = 0, 25, 50, 75, 100, 125, 150, 200, 250, 300, 500
VBFjet_mass  = 800, 880, 1000, 3000

DNNoutSM_kl_1              = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_tauup_DM0    = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_taudown_DM0  = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_tauup_DM1    = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_taudown_DM1  = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_tauup_DM10   = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_taudown_DM10 = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_tauup_DM11   = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_taudown_DM11 = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_eleup_DM0    = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_eledown_DM0  = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_eleup_DM1    = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_eledown_DM1  = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_muup         = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_mudown       = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_jetupTot     = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
DNNoutSM_kl_1_jetdownTot   = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0

s1b1jresolvedMcut_SR:DNNoutSM_kl_1       = 0.0, 0.040000000000000036, 0.10999999999999999, 0.18199999999999994, 0.257, 0.33399999999999996, 0.40800000000000003, 0.476, 0.5369999999999999, 0.59, 0.64, 0.6799999999999999, 0.716, 0.752, 0.783, 0.8160000000000001, 0.843, 0.87, 0.897, 0.92, 0.944, 0.962, 0.98, 1.0
s1b1jresolvedMcut_SStight:DNNoutSM_kl_1  = 0.0, 0.040000000000000036, 0.10999999999999999, 0.18199999999999994, 0.257, 0.33399999999999996, 0.40800000000000003, 0.476, 0.5369999999999999, 0.59, 0.64, 0.6799999999999999, 0.716, 0.752, 0.783, 0.8160000000000001, 0.843, 0.87, 0.897, 0.92, 0.944, 0.962, 0.98, 1.0
s1b1jresolvedMcut_OSinviso:DNNoutSM_kl_1 = 0.0, 0.040000000000000036, 0.10999999999999999, 0.18199999999999994, 0.257, 0.33399999999999996, 0.40800000000000003, 0.476, 0.5369999999999999, 0.59, 0.64, 0.6799999999999999, 0.716, 0.752, 0.783, 0.8160000000000001, 0.843, 0.87, 0.897, 0.92, 0.944, 0.962, 0.98, 1.0
s1b1jresolvedMcut_SSinviso:DNNoutSM_kl_1 = 0.0, 0.040000000000000036, 0.10999999999999999, 0.18199999999999994, 0.257, 0.33399999999999996, 0.40800000000000003, 0.476, 0.5369999999999999, 0.59, 0.64, 0.6799999999999999, 0.716, 0.752, 0.783, 0.8160000000000001, 0.843, 0.87, 0.897, 0.92, 0.944, 0.962, 0.98, 1.0

s2b0jresolvedMcut_SR:DNNoutSM_kl_1       = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
s2b0jresolvedMcut_SStight:DNNoutSM_kl_1  = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
s2b0jresolvedMcut_OSinviso:DNNoutSM_kl_1 = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0
s2b0jresolvedMcut_SSinviso:DNNoutSM_kl_1 = 0.0, 0.016000000000000014, 0.07299999999999995, 0.16999999999999993, 0.268, 0.369, 0.46299999999999997, 0.54, 0.649, 0.748, 0.832, 0.906, 0.96, 1.0

sboostedLLMcut_SR:DNNoutSM_kl_1       = 0.0, 0.08899999999999997, 0.44399999999999995, 1.0
sboostedLLMcut_SStight:DNNoutSM_kl_1  = 0.0, 0.08899999999999997, 0.44399999999999995, 1.0
sboostedLLMcut_OSinviso:DNNoutSM_kl_1 = 0.0, 0.08899999999999997, 0.44399999999999995, 1.0
sboostedLLMcut_SSinviso:DNNoutSM_kl_1 = 0.0, 0.08899999999999997, 0.44399999999999995, 1.0

VBFloose_SR:DNNoutSM_kl_1       = 0.0, 0.33699999999999997, 0.552, 0.733, 0.882, 1.0
VBFloose_SStight:DNNoutSM_kl_1  = 0.0, 0.33699999999999997, 0.552, 0.733, 0.882, 1.0
VBFloose_OSinviso:DNNoutSM_kl_1 = 0.0, 0.33699999999999997, 0.552, 0.733, 0.882, 1.0
VBFloose_SSinviso:DNNoutSM_kl_1 = 0.0, 0.33699999999999997, 0.552, 0.733, 0.882, 1.0


mdnn__v1__kl1_c2v1_c31__dy      =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__hh_ggf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__hh_vbf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v1__kl1_c2v1_c31__tt_fh   =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v1__kl1_c2v1_c31__tt_lep  =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v1__kl1_c2v1_c31__tth     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__dy      =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__dy_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__hh_ggf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_ggf_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__hh_vbf  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__hh_vbf_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

mdnn__v2__kl1_c2v1_c31__tt_fh   =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM0    =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM0  =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM1    =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM1  =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM10   =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM10 =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM11   =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM11 =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eleup_DM0    =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eledown_DM0  =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eleup_DM1    =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_eledown_DM1  =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_muup         =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_mudown       =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_jetupTot     =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0
mdnn__v2__kl1_c2v1_c31__tt_fh_jetdownTot   =  0.159999996424, 0.421700000763, 0.610800027847, 0.799899995327, 1.0

mdnn__v2__kl1_c2v1_c31__tt_lep  =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM0    =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM0  =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM1    =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM1  =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM10   =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM10 =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM11   =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM11 =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_eleup_DM0    =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_eledown_DM0  =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_eleup_DM1    =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_eledown_DM1  =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_muup         =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_mudown       =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_jetupTot     =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0
mdnn__v2__kl1_c2v1_c31__tt_lep_jetdownTot   =  0.159999996424, 0.341899991035, 0.422600001097, 0.488099992275, 0.553699970245, 0.61930000782, 0.68489998579, 0.750500023365, 0.824699997902, 1.0

mdnn__v2__kl1_c2v1_c31__tth     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM10   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM10 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_tauup_DM11   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_taudown_DM11 =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eleup_DM0    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eledown_DM0  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eleup_DM1    =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_eledown_DM1  =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_muup         =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_mudown       =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_jetupTot     =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958
mdnn__v2__kl1_c2v1_c31__tth_jetdownTot   =  0.16, 0.202, 0.244, 0.286, 0.328, 0.37, 0.412, 0.454, 0.496, 0.538, 0.58, 0.622, 0.664, 0.706, 0.748, 0.79, 0.832, 0.874, 0.916, 0.958

#########################################################################
#########################################################################

[histos2D]
tauH_SVFIT_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
genDecMode1:genDecMode2     = 10, -2, 8, 10, -2, 8
VBFjj_deltaEta:VBFjj_mass   = 400,  0,  10, 800,  0, 4000

# user defined binning for a variable - will override the definition in [histos2D]
# NOTE: if both x and y binnings are defined, there is no need to insert a binning in [histos2D]
# note: to specify an user binning for a certain axis of a 2D plot, e.g. a binning for B in A:B, use '@' :
# A:B@B = 0, 15, 20, 30, 50, 1000
[binning2D]
# tauH_SVFIT_mass:bH_mass_raw@bH_mass_raw     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass:bH_mass_raw@tauH_SVfit_mass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
