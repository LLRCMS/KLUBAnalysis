# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists

[selections]

baseline         = pairType == 1 && dau1_pt > 20 && abs (dau1_eta) < 2.1 && dau2_pt > 25 && abs (dau2_eta) < 2.3 && nleps == 0 && bjet1_pt > 20 && bjet2_pt > 20 && isVBFtrigger == 0 && nbjetscand > 1
#baseline         = pairType == 1 && dau1_pt > 20 && abs(dau1_eta) < 2.1 && dau2_pt > 20 && abs(dau2_eta) < 2.3 && nleps == 0 && nbjetscand > 1 && isVBFtrigger == 0
#baseline         = pairType == 1 && dau1_pt > 20 && abs(dau1_eta) < 2.1 && dau2_pt > 20 && abs(dau2_eta) < 2.3 && nleps == 0 && nbjetscand > 1
baselineVBF      = baseline, isVBF == 1
baselineNoVBF    = baseline, isVBF == 0
baseline55       = baseline, tauH_SVFIT_mass > 50
baselineVBFloose = baseline55, isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 

# btag requirements - DeepFlavor WPs={0.0521, 0.3033, 0.7489}; // L,M,T -- Legacy 2017 DeepFlavor
btagL        = bjet1_bID_deepFlavor > 0.0521 && bjet2_bID_deepFlavor < 0.0521 #only 1 jet with loose btag working point
btagM        = bjet1_bID_deepFlavor > 0.3033 && bjet2_bID_deepFlavor < 0.3033 #only 1 jet with medium btag working point
btagMfirst   = bjet1_bID_deepFlavor > 0.3033                                  #at least 1 jet with medium btag working point
btagLL       = bjet1_bID_deepFlavor > 0.0521 && bjet2_bID_deepFlavor > 0.0521 #both jets with loose btag working point
btagMM       = bjet1_bID_deepFlavor > 0.3033 && bjet2_bID_deepFlavor > 0.3033 #both jets with medium btag working point
nobtagMM     = bjet1_bID_deepFlavor < 0.3033 && bjet2_bID_deepFlavor < 0.3033 #both jets NOT btagged (medium working point)
nobtagL      = bjet1_bID_deepFlavor < 0.0521 && bjet2_bID_deepFlavor < 0.0521 #both jets NOT btagged (loose working point)

massCut       = bH_mass_raw > 80 && bH_mass_raw < 160 && tauH_SVFIT_mass > 80 && tauH_SVFIT_mass < 160
massCutCent   = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && bH_mass_raw > 74.5 && bH_mass_raw < 147.5
boostMassCut  = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && fatjet_softdropMass > 90 && fatjet_softdropMass < 160
circMassCut   = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) <  40.0
ellypsMassCut = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ringCut       = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) >  40.0 && TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) < 60.0
ringCutLarge  = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) >  40.0 && TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) < 80.0
ringCutVLarge = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) >  40.0 && TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) < 100.0
massSideband  = bH_mass_raw > 156 && bH_mass_raw < 256 && tauH_SVFIT_mass > 151 && tauH_SVFIT_mass <  251
minHmass      = tauH_mass>60
METCut        = met_et < 40
invMETCut     = met_et > 40

# ABCD regions used in the analysis - DeepTau
SR           = isOS != 0 && dau1_eleMVAiso == 1 && dau2_deepTauVsJet >= 5                          # signal region: opposite sign, isolated taus
SStight      = isOS == 0 && dau1_eleMVAiso == 1 && dau2_deepTauVsJet >= 5                          # B region
OSrlx        = isOS != 0 && dau1_eleMVAiso == 1 && dau2_deepTauVsJet >= 2
SSrlx        = isOS == 0 && dau1_eleMVAiso == 1 && dau2_deepTauVsJet >= 2                          # B' region
OSinviso     = isOS != 0 && dau1_eleMVAiso == 1 && dau2_deepTauVsJet >= 2 && dau2_deepTauVsJet < 5 # C region
SSinviso     = isOS == 0 && dau1_eleMVAiso == 1 && dau2_deepTauVsJet >= 2 && dau2_deepTauVsJet < 5 # D region

baselineMassCut = baseline, ellypsMassCut
baselineBstd    = baseline, isBoosted == 1

s1b1j = baseline, btagM
s2b0j = baseline, btagMM
s0b2j = baseline, nobtagMM

s1b1jresolved = baseline , btagM , isBoosted != 1, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && bjet1_bID_deepFlavor > 0.3033)
s2b0jresolved = baseline , btagMM, isBoosted != 1, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && bjet1_bID_deepFlavor > 0.3033)
sboostedLL    = baseline , btagLL, isBoosted == 1, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && bjet1_bID_deepFlavor > 0.3033)
sboostedMM    = baseline , btagMM, isBoosted == 1, !(isVBF == 1 && VBFjj_mass > 500 && VBFjj_deltaEta > 3 && bjet1_bID_deepFlavor > 0.3033)
VBFloose      = baselineVBFloose, btagMfirst

s1b1jresolvedMcut = s1b1jresolved, ellypsMassCut
s2b0jresolvedMcut = s2b0jresolved, ellypsMassCut
#sboostedLLMcut    = sboostedLL   , boostMassCut
#sboostedMMMcut    = sboostedMM   , boostMassCut
sboostedLLMcut    = sboostedLL   , ellypsMassCut # Davide: boostMassCut not available at the moment
sboostedMMMcut    = sboostedMM   , ellypsMassCut # Davide: boostMassCut not available at the moment
VBFlooseMcut      = VBFloose     , ellypsMassCut 

#########################################################################
#########################################################################

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]
baseline = MC_weight, PUReweight, L1pref_weight, trigSF, IdAndIsoAndFakeSF_deep_pt, DYscale_MTT, prescaleWeight, PUjetID_SF
#baseline = MC_weight, PUReweight, L1pref_weight, trigSF, FakeRateSF_deep, DYscale_MTT, prescaleWeight, PUjetID_SF

btagLL   = bTagweightL
btagMM   = bTagweightM
nobtagMM = bTagweightM
btagL    = bTagweightL
btagM    = bTagweightM

#########################################################################
#########################################################################

[sampleWeights]
TTfullyHad = TTtopPtreweight
TTfullyLep = TTtopPtreweight
TTsemiLep  = TTtopPtreweight

#########################################################################
#########################################################################

# define alternative weights to be tested instead of the nominal one
[systematics]
#TTtopPtreweight = topUp:TTtopPtreweight_up , topDown:TTtopPtreweight_down Davide: not available at the moment
#trigSF          = trigUP:trigSF_up , trigDOWN:trigSF_down
#turnOnreweight  = rewUP:turnOnreweight_tauup, rewDO:turnOnreweight_taudown

#########################################################################
#########################################################################

# ROOT-like definition of the binning
[histos]

nbjetscand              = 20,-0.5,19.5
njets                	= 20,-0.5,19.5
npv                  	= 50, 0, 50
npu                     = 25, 0, 50

dau1_pt              	= 40, 20, 220
dau1_eta             	= 25, -2.5, 2.5
dau1_phi             	= 25, -3.14159, 3.14159
dau1_iso             	= 24, 0, 8
dau1_dxy             	= 100, -0.01, 0.01
dau1_dz              	= 100, -0.1, 0.1
dau2_pt              	= 40, 20, 220
dau2_eta             	= 100, -2.5, 2.5
dau2_phi             	= 25, -3.14159, 3.14159
dau2_MVAisoNew          = 6, 0,6
dau2_dxy             	= 100, -0.01, 0.01
dau2_dz              	= 100, -0.1, 0.1

met_et               	= 35,0,350
met_phi              	= 25, -0.2, 6.3
met_er_et            	= 30, 0, 600
met_er_phi           	= 25, -3.14159, 3.14159

bjet1_pt             	= 30, 20, 200
bjet1_eta            	= 25, -2.4, 2.4
bjet1_phi            	= 25, -3.14159, 3.14159
bjet1_bID_deepFlavor 	= 15, 0, 1
bjet2_pt             	= 30, 20, 200
bjet2_eta            	= 25, -2.4, 2.4
bjet2_phi            	= 25, -3.14159, 3.14159
bjet2_bID_deepFlavor 	= 15, 0, 1

bH_mass              	= 50, 0, 500
bH_mass_raw          	= 50, 0, 300
bH_pt                	= 20, 0, 400
dib_deltaR              = 25, 0, 5
dib_deltaPhi            = 15, 0., 3.14159
dib_deltaEta            = 20, 0, 10

tauH_mass            	= 25, 0, 300
tauH_pt              	= 20, 0, 300
tauH_SVFIT_mass      	= 25, 0, 500
tauH_SVFIT_pt        	= 20, 0, 300
ditau_deltaR            = 25, 0, 5
ditau_deltaPhi          = 15, 0., 3.14159
ditau_deltaEta          = 20, 0, 10

HHmass               	= 10, 0, 1000
HH_pt                	= 50, 0, 300
HHKin_mass           	= 50, 250, 1000
HH_deltaPhi          	= 15, 0., 3.14159
HHsvfit_pt           	= 50, 0, 500
HHsvfit_deltaPhi     	= 25, 0, 3.14159
HH_deltaR            	= 35, 0, 7

VBFjj_mass           	= 20, 0, 1500
VBFjj_deltaEta       	= 20, 0, 10
VBFjj_dEtaSign       	= 40, -20, 20
VBFjet1_pt           	= 20, 0, 500
VBFjet1_eta          	= 25, -2.4, 2.4
VBFjet1_phi          	= 25, -3.14159, 3.14159
VBFjet1_btag_deepFlavor = 20, 0, 1
VBFjet2_pt           	= 20, 0, 500
VBFjet2_eta          	= 25, -2.4, 2.4
VBFjet2_phi          	= 25, -3.14159, 3.14159
VBFjet2_btag_deepFlavor = 20, 0, 1

fatjet_softdropMass     = 50, 0, 300

mT                    	     = 20, 0, 200
mT1                   	     = 20, 0, 200.
mT2                   	     = 20, 0, 200.
bH_VBF1_deltaEta      	     = 10, 0, 10
tauHMet_deltaPhi      	     = 15, 0., 3.14159
bHMet_deltaPhi        	     = 15, 0., 3.14159
tauHMetdeltaPhi       	     = 25, 0, 3.15
bHMetdeltaPhi         	     = 25, 0, 3.15
dau1MET_deltaphi      	     = 25, 0, 3.14159
tauHsvfitMet_deltaPhi 	     = 25, 0, 3.14159
dib_deltaR_per_bHpt   	     = 60, 0, 600
ditau_deltaR_per_tauHsvfitpt = 60, 0, 600
LepTauKine          	     = 25,-0.94,0.94
genDecMode1         	     = 10, -2, 8
p_zeta              	     = 30, -50, 250
HH_zV               	     = 40, -10, 10
BDT_MET_bH_cosTheta 	     = 20,  -1,   1
BDT_HT20            	     = 20,   0, 400
BDT_topPairMasses   	     = 30, 0, 600

BDToutSM_kl_1              = 15,-1,1

DNNoutSM_kl_1              = 20,0,1
DNNoutSM_kl_1_tauup_DM0    = 20,0,1
DNNoutSM_kl_1_taudown_DM0  = 20,0,1
DNNoutSM_kl_1_tauup_DM1    = 20,0,1
DNNoutSM_kl_1_taudown_DM1  = 20,0,1
DNNoutSM_kl_1_tauup_DM10   = 20,0,1
DNNoutSM_kl_1_taudown_DM10 = 20,0,1
DNNoutSM_kl_1_tauup_DM11   = 20,0,1
DNNoutSM_kl_1_taudown_DM11 = 20,0,1
DNNoutSM_kl_1_eleup_DM0    = 20,0,1
DNNoutSM_kl_1_eledown_DM0  = 20,0,1
DNNoutSM_kl_1_eleup_DM1    = 20,0,1
DNNoutSM_kl_1_eledown_DM1  = 20,0,1
DNNoutSM_kl_1_muup         = 20,0,1
DNNoutSM_kl_1_mudown       = 20,0,1
DNNoutSM_kl_1_jetupTot     = 20,0,1
DNNoutSM_kl_1_jetdownTot   = 20,0,1

#########################################################################
#########################################################################

# user defined binning for a variable - has precedence on [histos]
[binning]
#HH_mass             = 200, 250, 300, 350, 450, 600, 1000
#HH_mass_raw         = 0, 100, 120, 140, 160, 180, 200, 225, 250, 275, 300, 325, 350, 375, 400, 500
#HHKin_mass          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
#HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
#HHsvfit_mass        = 0, 100, 120, 140, 160, 180, 200, 225, 250, 275, 300, 325, 350, 375, 400, 500
#bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#fatjet_softdropMass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#tauH_SVFIT_mass     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
#MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 350, 500, 600

#########################################################################
#########################################################################

[histos2D]
tauH_SVFIT_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
tauH_SVFIT_mass:bH_mass     = 100, 0, 500, 100, 0, 500
tauH_mass:bH_mass           = 100, 0, 500, 100, 0, 500
genDecMode1:genDecMode2     = 10, -2,   8, 10, -2, 8
VBFjj_deltaEta:VBFjj_mass   = 40,  0,  10, 80,  0, 4000

#########################################################################
#########################################################################

# user defined binning for a variable - will override the definition in [histos2D]
# NOTE: if both x and y binnings are defined, there is no need to insert a binning in [histos2D]
# note: to specify an user binning for a certain axis of a 2D plot, e.g. a binning for B in A:B, use '@' :
# A:B@B = 0, 15, 20, 30, 50, 1000
[binning2D]
# tauH_SVFIT_mass:bH_mass_raw@bH_mass_raw     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass:bH_mass_raw@tauH_SVfit_mass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
