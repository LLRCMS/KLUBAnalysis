[general]

lumi = 35922 # pb^-1 full 2016

outputFolder = analysis_TauTau_2016_1Sept2020_limits

data = DTauB, DTauC, DTauD, DTauE, DTauF, DTauG, DTauH

signals = GGHH_NLO_cHHH1_xs, GGHH_NLO_cHHH0_xs, GGHH_NLO_cHHH5_xs, VBFHH_CV_1_C2V_1_C3_1_xs, VBFHH_CV_0p5_C2V_1_C3_1_xs, VBFHH_CV_1p5_C2V_1_C3_1_xs, VBFHH_CV_1_C2V_1_C3_0_xs, VBFHH_CV_1_C2V_1_C3_2_xs, VBFHH_CV_1_C2V_2_C3_1_xs

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DY_HM, DY_LM, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, ZH_HBB_ZLL, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, WWW, WWZ, WZZ, ZZZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ

variables = DNNoutSM_kl_1, DNNoutSM_kl_1_tauup_DM0, DNNoutSM_kl_1_taudown_DM0, DNNoutSM_kl_1_tauup_DM1, DNNoutSM_kl_1_taudown_DM1, DNNoutSM_kl_1_tauup_DM10, DNNoutSM_kl_1_taudown_DM10, DNNoutSM_kl_1_tauup_DM11, DNNoutSM_kl_1_taudown_DM11, DNNoutSM_kl_1_eleup_DM0, DNNoutSM_kl_1_eledown_DM0, DNNoutSM_kl_1_eleup_DM1, DNNoutSM_kl_1_eledown_DM1, DNNoutSM_kl_1_muup, DNNoutSM_kl_1_mudown, DNNoutSM_kl_1_jetupTot, DNNoutSM_kl_1_jetdownTot, mdnn__v2__kl1_c2v1_c31__hh_ggf, mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM0, mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM0, mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM1, mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM1, mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM10, mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM10, mdnn__v2__kl1_c2v1_c31__hh_ggf_tauup_DM11, mdnn__v2__kl1_c2v1_c31__hh_ggf_taudown_DM11, mdnn__v2__kl1_c2v1_c31__hh_ggf_eleup_DM0, mdnn__v2__kl1_c2v1_c31__hh_ggf_eledown_DM0, mdnn__v2__kl1_c2v1_c31__hh_ggf_eleup_DM1, mdnn__v2__kl1_c2v1_c31__hh_ggf_eledown_DM1, mdnn__v2__kl1_c2v1_c31__hh_ggf_muup, mdnn__v2__kl1_c2v1_c31__hh_ggf_mudown, mdnn__v2__kl1_c2v1_c31__hh_ggf_jetupTot, mdnn__v2__kl1_c2v1_c31__hh_ggf_jetdownTot, mdnn__v2__kl1_c2v1_c31__hh_vbf, mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM0, mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM0, mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM1, mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM1, mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM10, mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM10, mdnn__v2__kl1_c2v1_c31__hh_vbf_tauup_DM11, mdnn__v2__kl1_c2v1_c31__hh_vbf_taudown_DM11, mdnn__v2__kl1_c2v1_c31__hh_vbf_eleup_DM0, mdnn__v2__kl1_c2v1_c31__hh_vbf_eledown_DM0, mdnn__v2__kl1_c2v1_c31__hh_vbf_eleup_DM1, mdnn__v2__kl1_c2v1_c31__hh_vbf_eledown_DM1, mdnn__v2__kl1_c2v1_c31__hh_vbf_muup, mdnn__v2__kl1_c2v1_c31__hh_vbf_mudown, mdnn__v2__kl1_c2v1_c31__hh_vbf_jetupTot, mdnn__v2__kl1_c2v1_c31__hh_vbf_jetdownTot, mdnn__v2__kl1_c2v1_c31__tth, mdnn__v2__kl1_c2v1_c31__tth_tauup_DM0, mdnn__v2__kl1_c2v1_c31__tth_taudown_DM0, mdnn__v2__kl1_c2v1_c31__tth_tauup_DM1, mdnn__v2__kl1_c2v1_c31__tth_taudown_DM1, mdnn__v2__kl1_c2v1_c31__tth_tauup_DM10, mdnn__v2__kl1_c2v1_c31__tth_taudown_DM10, mdnn__v2__kl1_c2v1_c31__tth_tauup_DM11, mdnn__v2__kl1_c2v1_c31__tth_taudown_DM11, mdnn__v2__kl1_c2v1_c31__tth_eleup_DM0, mdnn__v2__kl1_c2v1_c31__tth_eledown_DM0, mdnn__v2__kl1_c2v1_c31__tth_eleup_DM1, mdnn__v2__kl1_c2v1_c31__tth_eledown_DM1, mdnn__v2__kl1_c2v1_c31__tth_muup, mdnn__v2__kl1_c2v1_c31__tth_mudown, mdnn__v2__kl1_c2v1_c31__tth_jetupTot, mdnn__v2__kl1_c2v1_c31__tth_jetdownTot, mdnn__v2__kl1_c2v1_c31__tt_lep, mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM0, mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM0, mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM1, mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM1, mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM10, mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM10, mdnn__v2__kl1_c2v1_c31__tt_lep_tauup_DM11, mdnn__v2__kl1_c2v1_c31__tt_lep_taudown_DM11, mdnn__v2__kl1_c2v1_c31__tt_lep_eleup_DM0, mdnn__v2__kl1_c2v1_c31__tt_lep_eledown_DM0, mdnn__v2__kl1_c2v1_c31__tt_lep_eleup_DM1, mdnn__v2__kl1_c2v1_c31__tt_lep_eledown_DM1, mdnn__v2__kl1_c2v1_c31__tt_lep_muup, mdnn__v2__kl1_c2v1_c31__tt_lep_mudown, mdnn__v2__kl1_c2v1_c31__tt_lep_jetupTot, mdnn__v2__kl1_c2v1_c31__tt_lep_jetdownTot, mdnn__v2__kl1_c2v1_c31__tt_fh, mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM0, mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM0, mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM1, mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM1, mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM10, mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM10, mdnn__v2__kl1_c2v1_c31__tt_fh_tauup_DM11, mdnn__v2__kl1_c2v1_c31__tt_fh_taudown_DM11, mdnn__v2__kl1_c2v1_c31__tt_fh_eleup_DM0, mdnn__v2__kl1_c2v1_c31__tt_fh_eledown_DM0, mdnn__v2__kl1_c2v1_c31__tt_fh_eleup_DM1, mdnn__v2__kl1_c2v1_c31__tt_fh_eledown_DM1, mdnn__v2__kl1_c2v1_c31__tt_fh_muup, mdnn__v2__kl1_c2v1_c31__tt_fh_mudown, mdnn__v2__kl1_c2v1_c31__tt_fh_jetupTot, mdnn__v2__kl1_c2v1_c31__tt_fh_jetdownTot, mdnn__v2__kl1_c2v1_c31__dy, mdnn__v2__kl1_c2v1_c31__dy_tauup_DM0, mdnn__v2__kl1_c2v1_c31__dy_taudown_DM0, mdnn__v2__kl1_c2v1_c31__dy_tauup_DM1, mdnn__v2__kl1_c2v1_c31__dy_taudown_DM1, mdnn__v2__kl1_c2v1_c31__dy_tauup_DM10, mdnn__v2__kl1_c2v1_c31__dy_taudown_DM10, mdnn__v2__kl1_c2v1_c31__dy_tauup_DM11, mdnn__v2__kl1_c2v1_c31__dy_taudown_DM11, mdnn__v2__kl1_c2v1_c31__dy_eleup_DM0, mdnn__v2__kl1_c2v1_c31__dy_eledown_DM0, mdnn__v2__kl1_c2v1_c31__dy_eleup_DM1, mdnn__v2__kl1_c2v1_c31__dy_eledown_DM1, mdnn__v2__kl1_c2v1_c31__dy_muup, mdnn__v2__kl1_c2v1_c31__dy_mudown, mdnn__v2__kl1_c2v1_c31__dy_jetupTot, mdnn__v2__kl1_c2v1_c31__dy_jetdownTot

selections = s1b1jresolvedMcut, s2b0jresolvedMcut, sboostedLLMcut, VBFloose, GGFclass, VBFclass, ttHclass, TTlepclass, TThadclass, DYclass

regions    = SR, SStight, OSinviso, SSinviso


[configs]

sampleCfg = config/sampleCfg_Legacy2016.cfg
cutCfg    = config/selectionCfg_TauTau_Legacy2016.cfg
pattern   = gooddnnfiles  # use this only when running on systematics files


[merge]
#TT        = TTfullyHad, TTfullyLep, TTsemiLep
#WJets     = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
#other	  = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, TWtop, TWantitop, singleTop_top, singleTop_antitop, ZH_HBB_ZLL, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu, TTWW, TTWZ, TTZZ, WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q, WWW, WWZ, WZZ, ZZZ, DY_LM

# For shape sync
#TT      = TTfullyHad
#W       = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
#EWK     = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
#singleT = TWtop, TWantitop, singleTop_top, singleTop_antitop
#H       = ZH_HBB_ZLL, ZH_HTauTau, ggHTauTau, VBFHTauTau, WplusHTauTau, WminusHTauTau, ttHJetTononBB, ttHJetToBB
#TTV     = TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
#TTVV    = TTWW, TTWZ, TTZZ
#VV      = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q
#VVV     = WWW, WWZ, WZZ, ZZZ

# For limits
#TT        = TTfullyHad, TTfullyLep, TTsemiLep
#WJets     = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
#EWK       = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
#singleT   = TWtop, TWantitop, singleTop_top, singleTop_antitop
#VH        = ZH_HBB_ZLL, ZH_HTauTau, WplusHTauTau, WminusHTauTau
#ttH       = ttHJetTononBB, ttHJetToBB
#doubleTsingleV = TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
#doubleTVV      = TTWW, TTWZ, TTZZ
#doubleV        = WWTo2L2Nu, WWTo4Q, WWToLNuQQ, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L
#tripleV        = WWW, WWZ, WZZ, ZZZ
#DY_lowMass     = DY_LM

# For limits
TT        = TTfullyHad, TTfullyLep, TTsemiLep
WJets     = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK       = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT   = TWtop, TWantitop, singleTop_top, singleTop_antitop
ZH        = ZH_HBB_ZLL, ZH_HTauTau
WH        = WplusHTauTau, WminusHTauTau
WW        = WWTo2L2Nu, WWTo4Q, WWToLNuQQ
WZ        = WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WZTo3LNu
ZZ        = ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, ZZTo4L, ZZTo4Q
ttH       = ttHJetTononBB, ttHJetToBB
TTX       = TTZZ, TTWW, TTWZ, TTWJetsToLNu, TTWJetsToQQ, TTZToLLNuNu
ggH       = ggHTauTau
VBFH      = VBFHTauTau
VVV       = WWW, WWZ, WZZ, ZZZ
DY        = DY_LM, DY_HM

data_obs  = DTauB, DTauC, DTauD, DTauE, DTauF, DTauG, DTauH


############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
# 
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
#for normal QCD
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD      = SSinviso
#regionC      = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


[VBF_rew]
# !WARNING! The input samples MUST be in the order: node1, node2, node3, node4, node5, node19 !
# See the list 'inputSignals' to understand the link node<->couplings
doReweighting = False
inputSignals = VBFHH_CV_1_C2V_1_C3_1, VBFHH_CV_1_C2V_1_C3_0, VBFHH_CV_1_C2V_1_C3_2, VBFHH_CV_1_C2V_2_C3_1, VBFHH_CV_1_5_C2V_1_C3_1, VBFHH_CV_1_C2V_0_C3_2
target_kl  = 1
target_cv  = 0, 1
target_c2v = 1
target_xs = 1 #[pb]
