[general]

lumi = 41529 # pb^-1 full 2017
# the lumi in fb^-1 is used only by the plotting program
# approximate to only one decimal digit
lumi_fb = 41.5 # fb^-1 full 2017

outputFolder = analysis_TauTau_Legacy2017_23June2020_syst

data = DTauB, DTauC, DTauD, DTauE, DTauF

signals = GGHH_NLO_cHHH0_xs, GGHH_NLO_cHHH1_xs, GGHH_NLO_cHHH5_xs, VBFHH_CV_1_C2V_1_C3_1_xs, VBFHH_CV_1_C2V_0_C3_2_xs, VBFHH_CV_1p5_C2V_1_C3_1_xs, VBFHH_CV_1_C2V_1_C3_0_xs, VBFHH_CV_1_C2V_1_C3_2_xs, VBFHH_CV_1_C2V_2_C3_1_xs   

backgrounds = TTfullyHad, TTfullyLep, TTsemiLep, DYJets_0j0b, DYJets_1j0b, DYJets_1j1b, DYJets_2j0b, DYJets_2j1b, DYJets_2j2b, DYJets_3j0b, DYJets_3j1b, DYJets_3j2b, DYJets_3j3b, DYJets_4j0b, DYJets_4j1b, DYJets_4j2b, DYJets_4j3b, DYJets_4j4b, DYJets_M_10_50_Not_PU_Safe, DYJets_M_10_50_PU_Safe, WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf, TWtop, TWantitop, singleTop_top, singleTop_antitop, EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL, ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau, VBFHTauTau, ggHTauTau, WplusHTauTau, WminusHTauTau, ZZTo4L, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, WZTo3LNu, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q, WWTo2L2Nu, WWToLNuQQ, WWTo4Q, ZZZ, WZZ, WWW, WWZ, ttHJetToBB, ttHJetTononBB, ttHToTauTau, TTWJetsToLNu, TTWJetsToQQ, TTZZ, TTWW, TTWZ, TTWH, TTZH, TTZToLLNuNu, TTZToQQ       

variables = DNNoutSM_kl_1
#tauH_pt , dau1_eta, dau2_eta, ditau_deltaR, tauH_mass, tauH_SVFIT_mass, DNNoutSM_kl_1, bH_mass, bH_pt

selections = s1b1jresolvedMcut_nominal, s2b0jresolvedMcut_nominal, sboostedLLMcut_nominal, VBFloose_nominal, s1b1jresolvedMcut_tesUp_DM0, s1b1jresolvedMcut_tesDown_DM0, s2b0jresolvedMcut_tesUp_DM0,s2b0jresolvedMcut_tesDown_DM0, sboostedLLMcut_tesUp_DM0, sboostedLLMcut_tesDown_DM0, VBFloose_tesUp_DM0, VBFloose_tesDown_DM0, s1b1jresolvedMcut_tesUp_DM1, s1b1jresolvedMcut_tesDown_DM1, s2b0jresolvedMcut_tesUp_DM1, s2b0jresolvedMcut_tesDown_DM1, sboostedLLMcut_tesUp_DM1, sboostedLLMcut_tesDown_DM1, VBFloose_tesUp_DM1, VBFloose_tesDown_DM1, s1b1jresolvedMcut_tesUp_DM10, s1b1jresolvedMcut_tesDown_DM10, s2b0jresolvedMcut_tesUp_DM10, s2b0jresolvedMcut_tesDown_DM10, sboostedLLMcut_tesUp_DM10, sboostedLLMcut_tesDown_DM10, VBFloose_tesUp_DM10, VBFloose_tesDown_DM10, s1b1jresolvedMcut_tesUp_DM11, s1b1jresolvedMcut_tesDown_DM11, s2b0jresolvedMcut_tesUp_DM11, s2b0jresolvedMcut_tesDown_DM11, sboostedLLMcut_tesUp_DM11, sboostedLLMcut_tesDown_DM11, VBFloose_tesUp_DM11, VBFloose_tesDown_DM11, s1b1jresolvedMcut_eesUp_DM0, s1b1jresolvedMcut_eesDown_DM0, s2b0jresolvedMcut_eesUp_DM0, s2b0jresolvedMcut_eesDown_DM0, sboostedLLMcut_eesUp_DM0, sboostedLLMcut_eesDown_DM0, VBFloose_eesUp_DM0, VBFloose_eesDown_DM0, s1b1jresolvedMcut_eesUp_DM1, s1b1jresolvedMcut_eesDown_DM1, s2b0jresolvedMcut_eesUp_DM1, s2b0jresolvedMcut_eesDown_DM1, sboostedLLMcut_eesUp_DM1, sboostedLLMcut_eesDown_DM1, VBFloose_eesUp_DM1, VBFloose_eesDown_DM1, s1b1jresolvedMcut_mesUp, s1b1jresolvedMcut_mesDown, s2b0jresolvedMcut_mesUp, s2b0jresolvedMcut_mesDown, sboostedLLMcut_mesUp, sboostedLLMcut_mesDown, VBFloose_mesUp, VBFloose_mesDown, s1b1jresolvedMcut_jesUp_Tot, s1b1jresolvedMcut_jesDown_Tot, s2b0jresolvedMcut_jesUp_Tot, s2b0jresolvedMcut_jesDown_Tot, sboostedLLMcut_jesUp_Tot, sboostedLLMcut_jesDown_Tot, VBFloose_jesUp_Tot, VBFloose_jesDown_Tot

regions    = SR


[configs]
sampleCfg = config/sampleCfg_Legacy2017.cfg
pattern   = goodsystfiles
cutCfg    = config/selectionCfg_TauTau_Legacy2017_syst.cfg


[merge]
TT	 = TTfullyHad, TTfullyLep, TTsemiLep
WJets	 = WJets_HT_0_70, WJets_HT_70_100, WJets_HT_100_200, WJets_HT_200_400, WJets_HT_400_600, WJets_HT_600_800, WJets_HT_800_1200, WJets_HT_1200_2500, WJets_HT_2500_Inf
EWK	 = EWKWMinus2Jets_WToLNu, EWKWPlus2Jets_WToLNu, EWKZ2Jets_ZToLL
singleT  = TWtop, TWantitop, singleTop_top, singleTop_antitop
ZH	 = ZH_HBB_ZLL, ZH_HBB_ZQQ, ZH_HTauTau
WH	 = WplusHTauTau, WminusHTauTau
ttH	 = ttHJetTononBB, ttHJetToBB, ttHToTauTau
WW	 = WWTo2L2Nu, WWToLNuQQ, WWTo4Q
WZ	 = ZZTo4L, ZZTo2L2Nu, ZZTo2L2Q, ZZTo2Q2Nu, WZTo3LNu, WZTo1L1Nu2Q, WZTo1L3Nu, WZTo2L2Q
others   = ZZZ, WZZ, WWW, WWZ, TTWJetsToLNu, TTWJetsToQQ, TTZZ, TTWW, TTWZ, TTWH, TTZH, TTZToLLNuNu, TTZToQQ, VBFHTauTau, ggHTauTau
DY	 = DYJets_0j0b, DYJets_1j0b, DYJets_1j1b, DYJets_2j0b, DYJets_2j1b, DYJets_2j2b, DYJets_3j0b, DYJets_3j1b, DYJets_3j2b, DYJets_3j3b, DYJets_4j0b, DYJets_4j1b, DYJets_4j2b, DYJets_4j3b, DYJets_4j4b, DYJets_M_10_50_Not_PU_Safe, DYJets_M_10_50_PU_Safe
data_obs = DTauB, DTauC, DTauD, DTauE, DTauF

############################################################################################
############################################################################################
# the following lines are used for postprocessing (pp_), i.e. not read from AnalysisHelper
# but used in subsequent steps of the analysis to combine histos, compute QCD etc..
# we keep them here to have everything at hand

[pp_merge]


## in case some histos must be rebinned. Pass as
## uniqueid = varToRebin , condition, newBinning
# [pp_rebin]
# r1 = HHKin_mass_raw         , sboostedLLMcut , 250, 1000 # a unique, big bin
# r2 = HHKin_mass_raw_tauup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r3 = HHKin_mass_raw_taudown , sboostedLLMcut , 250, 1000 # a unique, big bin
# r4 = HHKin_mass_raw_jetup   , sboostedLLMcut , 250, 1000 # a unique, big bin
# r5 = HHKin_mass_raw_jetdown , sboostedLLMcut , 250, 1000 # a unique, big bin
#
# r6  = MT2         , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r7  = MT2_tauup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r8  = MT2_taudown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r9  = MT2_jetup   , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal
# r10 = MT2_jetdown , sboostedLLMcut , 0, 150, 500 # two bins - the lowest one has small signal

## parameters for QCD evaluation
## doFitIf : condition to be respected to make rlx-to-tight QCD fit. It is used as eval(doFitIf). Use names sel, var


[pp_QCD]
#QCDname      = QCD
#SR           = SR
#yieldSB      = SStight
#shapeSB      = SSrlx
#SBtoSRfactor = 1
#regionD = SSinviso
#regionC = OSinviso
#doFitIf      = False
#fitFunc      = [0] + [1]*x


#for inverted QCD
QCDname      = QCD
SR           = SR
yieldSB      = OSinviso
shapeSB      = OSinviso
SBtoSRfactor = 1
doFitIf      = False
fitFunc      = [0] + [1]*x
regionC      = SStight
regionD      = SSinviso


[VBF_rew]
# !WARNING! The input samples MUST be in the order: node1, node2, node3, node4, node5, node19 !
# See the list 'inputSignals' to understand the link node<->couplings
doReweighting = False
inputSignals = VBFHH_CV_1_C2V_1_C3_1, VBFHH_CV_1_C2V_1_C3_0, VBFHH_CV_1_C2V_1_C3_2, VBFHH_CV_1_C2V_2_C3_1, VBFHH_CV_1_5_C2V_1_C3_1, VBFHH_CV_1_C2V_0_C3_2
target_kl  = 1
target_cv  = 0, 1
target_c2v = 1
target_xs = 1 #[pb]
